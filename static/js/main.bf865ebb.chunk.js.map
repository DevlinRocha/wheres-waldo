{"version":3,"sources":["components/styles/Nav.styled.ts","components/NavBar.tsx","components/styles/Container.styled.ts","assets/Where's Waldo.png","assets/Odlaw.png","assets/Waldo.png","assets/Wenda.png","assets/WizardWhitebeard.png","components/HomePage.tsx","components/ContextMenu.tsx","components/styles/GameContainer.styled.ts","components/WaldoGame.tsx","assets/Waldo Found.png","components/GameOver.tsx","components/PageNotFound.tsx","components/styles/Global.ts","components/styles/Theme.ts","assets/Where's Waldo Gobbling Gluttons.jpg","assets/Where's Waldo Ski Resort.png","App.tsx","index.tsx"],"names":["Nav","styled","nav","NavBar","props","handleClick","console","log","setIsGameOver","onClick","to","exact","Container","div","ContainerRow","HomePage","src","WheresWaldo","alt","Waldo","Wenda","Wizard","Odlaw","ContextMenu","getCoords","selection","a","docRef","doc","db","level","getDoc","docSnap","exists","waldoCoords","data","error","e","target","textContent","setIsContextMenuOpen","isContextMenuOpen","Math","abs","mouseCoords","x","y","setIsOdlawFound","setIsWaldoFound","setIsWendaFound","setIsWizardFound","isFound","character","isOdlawFound","isWaldoFound","isWendaFound","isWizardFound","characters","map","GameContainer","section","menuCoords","theme","contextMenu","text","background","hover","WaldoGame","useState","setMouseCoords","setMenuCoords","isContextOpen","setIsContextOpen","setCharacters","history","useHistory","getDocs","collection","characterList","forEach","push","id","getMouseCoords","getBoundingClientRect","width","height","nativeEvent","offsetX","offsetY","mouseX","round","mouseY","pageX","pageY","useEffect","gameOver","includes","getCharacters","location","img","draggable","GameOver","WaldoFound","PageNotFound","GlobalStyles","createGlobalStyle","body","Theme","App","isGameOver","path","component","GobblingGluttons","SkiResort","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","getFirestore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bf865ebb.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Nav = styled.nav`\n\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    padding: 16px;\n\n    h1 > a {\n        color: black;\n    }\n\n    a {\n        text-decoration: none;\n    }\n\n    ul {\n        display: flex;\n        flex-direction: rows;\n        gap: 10px;\n        list-style: none;\n    }\n`;","import { Link, NavLink } from 'react-router-dom';\nimport { Nav } from \"./styles/Nav.styled\"\n\ninterface NavProps {\n    setIsGameOver: React.Dispatch<React.SetStateAction<boolean>>;\n};\n\nexport default function NavBar(props: NavProps) {\n\n    function handleClick() {\n        console.log('Reset Game');\n        props.setIsGameOver(false);\n    };\n\n    return(\n        <Nav>\n            <h1 onClick={handleClick} ><Link to='/'>Where's Waldo?</Link></h1>\n            \n            <ul>\n                <li onClick={handleClick} ><NavLink exact to='/gobbling-gluttons'>Gobbling Gluttons</NavLink></li>\n                <li onClick={handleClick} ><NavLink exact to='/ski-resort'>Ski Resort</NavLink></li>\n            </ul>\n        </Nav>\n    );\n};","import styled from 'styled-components';\n\nexport const Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    flex-wrap: wrap;\n    align-items: center;\n    width: 100%;\n    height: auto;\n    text-align: center;\n    gap: 64px;\n\n    img {\n        height: 35vh;\n        width: auto;\n        padding: 32px;\n    }\n`\n\nexport const ContainerRow = styled(Container)`\n    flex-direction: row;\n`","export default __webpack_public_path__ + \"static/media/Where's Waldo.08992c55.png\";","export default __webpack_public_path__ + \"static/media/Odlaw.7f2337c8.png\";","export default __webpack_public_path__ + \"static/media/Waldo.2a7963c3.png\";","export default __webpack_public_path__ + \"static/media/Wenda.c2c5c953.png\";","export default __webpack_public_path__ + \"static/media/WizardWhitebeard.77d677dc.png\";","import { Container, ContainerRow } from './styles/Container.styled';\n\nimport WheresWaldo from '../assets/Where\\'s Waldo.png';\nimport Odlaw from '../assets/Odlaw.png';\nimport Waldo from '../assets/Waldo.png';\nimport Wenda from '../assets/Wenda.png';\nimport Wizard from '../assets/WizardWhitebeard.png';\n\nexport default function HomePage() {\n    return(\n        <Container>\n\n            <figure>\n                <img src={WheresWaldo} alt=\"Where's Waldo?\" />\n                <figcaption>Welcome to Where's Waldo!</figcaption>\n            </figure>\n\n            <Container>\n\n                <p>Look for these characters!</p>\n\n                <ContainerRow>\n\n                    <figure>\n                        <figcaption>Waldo</figcaption>\n                        <img src={Waldo} alt='Waldo' />\n                    </figure>\n\n                    <figure>\n                        <figcaption>Wenda</figcaption>\n                        <img src={Wenda} alt='Wenda' />\n                    </figure>\n\n                    <figure>\n                        <figcaption>Wizard</figcaption>\n                        <img src={Wizard} alt='Wizard' />\n                    </figure>\n\n                    <figure>\n                        <figcaption>Odlaw</figcaption>\n                        <img src={Odlaw} alt='Odlaw' />\n                    </figure>\n\n                </ContainerRow>\n            </Container>\n        </Container>\n    );\n};","import { doc, getDoc } from 'firebase/firestore';\nimport { Coords } from './WaldoGame';\nimport { db } from '../index';\n\ninterface MenuProps {\n    isContextMenuOpen: boolean, setIsContextMenuOpen: React.Dispatch<React.SetStateAction<boolean>>;\n    img: string, level: string, characters: string[], mouseCoords: Coords;\n    isOdlawFound?: boolean, setIsOdlawFound: React.Dispatch<React.SetStateAction<boolean>>;\n    isWaldoFound?: boolean, setIsWaldoFound: React.Dispatch<React.SetStateAction<boolean>>;\n    isWendaFound?: boolean, setIsWendaFound: React.Dispatch<React.SetStateAction<boolean>>;\n    isWizardFound?: boolean, setIsWizardFound: React.Dispatch<React.SetStateAction<boolean>>;\n};\n\nexport default function ContextMenu(props: MenuProps) {\n\n    async function getCoords(selection: string) {\n        const docRef = doc(db, props.level, selection);\n        const docSnap = await getDoc(docRef);\n\n        if (docSnap.exists()) {\n\n          const waldoCoords = docSnap.data();\n          return waldoCoords;\n\n        } else {\n\n          console.error('No such document!');\n\n        };\n    };\n\n    async function handleClick(e: any) {\n        const selection: string = e.target.textContent;\n        props.setIsContextMenuOpen(!props.isContextMenuOpen);\n\n        const waldoCoords = await getCoords(selection);\n\n        if (waldoCoords) {\n\n            // Test for a deviance of 10 pixels\n            if ((Math.abs(props.mouseCoords.x - waldoCoords.x) < 10) && (Math.abs(props.mouseCoords.y - waldoCoords.y) < 10)) {\n\n                console.log(`You found ${selection}!`);\n\n                switch (selection) {\n\n                    case 'Odlaw':\n                        props.setIsOdlawFound(true);\n                        break;\n                        \n                    case 'Waldo':\n                        props.setIsWaldoFound(true);\n                        break;\n\n                    case 'Wenda':\n                        props.setIsWendaFound(true);\n                        break;\n\n                    case 'Wizard':\n                        props.setIsWizardFound(true);\n                        break;\n                };\n\n            } else {\n\n              console.log(`${selection} not found, try again!`);\n\n            };\n        };\n    };\n\n    function isFound(character: string): boolean {\n        \n        switch (character) {\n\n            case 'Odlaw':\n                return props.isOdlawFound ? true : false;\n\n            case 'Waldo':\n                return props.isWaldoFound ? true : false;\n\n            case 'Wenda':\n                return props.isWendaFound ? true : false;\n\n            case 'Wizard':\n                return props.isWizardFound ? true : false;\n\n            default:\n                return false;\n        };\n    };\n\n    return (\n        <ul>\n            {props.characters.map(character=>{\n                return (\n                    <li onClick={handleClick} key={character} >{isFound(character) ? <s>{character}</s> : character}</li>\n                );\n            })}\n        </ul>\n    );\n};","import styled from \"styled-components\";\nimport { Coords } from '../WaldoGame';\nimport { ThemeType } from './Theme';\n\ninterface GameProps {\n    theme?: ThemeType;\n    menuCoords: Coords;\n};\n\nexport const GameContainer = styled.section<GameProps>`\n    display: flex;\n    user-select: none;\n    width: 100%;\n    height: auto;\n\n    img {\n        --webkit-user-drag: none;\n        object-fit: contain;\n        width: 100%;\n        height: auto;\n    }\n\n    ul {\n        left: ${props=>props.menuCoords.x+1}px;\n        top: ${props=>props.menuCoords.y}px;\n        color: ${props=>props.theme.contextMenu.text};\n        display: flex;\n        flex-direction: column;\n        position: absolute;\n        list-style: none;\n        background-color: ${props=>props.theme.contextMenu.background};\n        padding: 3px;\n        border-radius: 7px;\n        gap: 3px;\n        z-index: 1;\n    }\n\n    li:hover {\n        color: ${props=>props.theme.contextMenu.hover.text};\n        cursor: pointer;\n        background-color: ${props=>props.theme.contextMenu.hover.background};\n        border-radius: 3px;\n    }\n`;","import { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router';\nimport { collection, getDocs } from 'firebase/firestore';\n\nimport ContextMenu from './ContextMenu';\n\nimport { GameContainer } from './styles/GameContainer.styled';\nimport { db } from '../index';\n\nexport interface Coords {\n  x: number,\n  y: number,\n};\n\ninterface GameProps {\n  isGameOver: boolean;\n  setIsGameOver: React.Dispatch<React.SetStateAction<boolean>>;\n  img: string, level: string;\n};\n\nexport default function WaldoGame(props: GameProps) {\n\n  const [mouseCoords, setMouseCoords] = useState({x:0,y:0});\n  const [menuCoords, setMenuCoords] = useState({x:0,y:0});\n  const [isContextOpen, setIsContextOpen] = useState(false);\n  const [isOdlawFound, setIsOdlawFound] = useState(false);\n  const [isWaldoFound, setIsWaldoFound] = useState(false);\n  const [isWendaFound, setIsWendaFound] = useState(false);\n  const [isWizardFound, setIsWizardFound] = useState(false);\n  const [characters, setCharacters] = useState<string[]>([]);\n\n  const history = useHistory();\n\n  useEffect(() => {\n\n    let gameOver: boolean[] = [];\n\n    for (let character in characters) {\n\n      switch (characters[character]) {\n\n        case 'Odlaw':\n            gameOver.push(isOdlawFound);\n            break;\n            \n        case 'Waldo':\n            gameOver.push(isWaldoFound);\n            break;\n\n        case 'Wenda':\n            gameOver.push(isWendaFound);\n            break;\n\n        case 'Wizard':\n            gameOver.push(isWizardFound);\n            break;\n      };\n\n      if (gameOver.includes(false)) {\n\n        return;\n\n      } else {\n\n        props.setIsGameOver(true);\n\n      };\n    };\n  }, [isOdlawFound, isWaldoFound, isWendaFound, isWizardFound]);\n\n  useEffect(() => {\n    resetCharacters();\n    getCharacters();\n  }, [history.location]);\n\n  function resetCharacters() {\n    setIsOdlawFound(false);\n    setIsWaldoFound(false);\n    setIsWendaFound(false);\n    setIsWizardFound(false);\n  };\n\n  async function getCharacters() {\n    const characterList = await getDocs(collection(db, props.level));\n    const characters: string[] = [];\n    characterList.forEach(character=>{\n      characters.push(character.id);\n    });\n    setCharacters(characters);\n};\n\n  function getMouseCoords(e: any) {\n    const { width, height }: { width: number; height: number; } = e.target.getBoundingClientRect();\n    const { offsetX, offsetY }: { offsetX: number; offsetY: number; } = e.nativeEvent;\n\n    const mouseX = (Math.round((offsetX / width) * 1000));\n    const mouseY = (Math.round((offsetY / height) * 1000));\n    const { pageX: menuX, pageY: menuY }: { pageX: number, pageY: number } = e;\n\n    const menuCoords: Coords = {\n      x: menuX,\n      y: menuY,\n    };\n\n    const mouseCoords: Coords = {\n      x: mouseX,\n      y: mouseY,\n    };\n\n    console.log(mouseCoords);\n\n    setMouseCoords(mouseCoords);\n    setMenuCoords(menuCoords);\n  };\n\n  async function handleClick(e: any) {\n    getMouseCoords(e);\n    setIsContextOpen(!isContextOpen);\n  };\n\n  return (\n    <GameContainer menuCoords={menuCoords}>\n      {isContextOpen\n        ? <ContextMenu isContextMenuOpen={isContextOpen} setIsContextMenuOpen={setIsContextOpen}\n            img={props.img} level={props.level} characters={characters} mouseCoords={mouseCoords}\n            isOdlawFound={isOdlawFound} setIsOdlawFound={setIsOdlawFound}\n            isWaldoFound={isWaldoFound} setIsWaldoFound={setIsWaldoFound}\n            isWendaFound={isWendaFound} setIsWendaFound={setIsWendaFound}\n            isWizardFound={isWizardFound} setIsWizardFound={setIsWizardFound} />\n        : null}\n      <img onClick={handleClick} src={props.img} draggable=\"false\" alt=\"Where's Waldo?\" />\n    </GameContainer>\n  );\n};","export default __webpack_public_path__ + \"static/media/Waldo Found.80f74ad0.png\";","import { Container } from './styles/Container.styled';\n\nimport WaldoFound from '../assets/Waldo Found.png';\n\ninterface GameOverProps {\n    isGameOver: boolean, setIsGameOver: React.Dispatch<React.SetStateAction<boolean>>;\n};\n\nexport default function GameOver(props: GameOverProps) {\n\n    function handleClick() {\n        props.setIsGameOver(false);\n    };\n\n    return(\n        <Container>\n            <section>\n\n                <figure>\n                    <img src={WaldoFound} alt='You found Waldo!' />\n                    <figcaption>You found Waldo!</figcaption>\n                </figure>\n\n                <button onClick={handleClick}>Play Again</button>\n\n            </section>\n        </Container>\n    );\n};","export default function PageNotFound() {\n    return(\n        <div>\n            Error 404 - Page Not Found\n        </div>\n    );\n};","import { createGlobalStyle } from 'styled-components';\nimport { ThemeType } from './Theme';\n\nexport const GlobalStyles = createGlobalStyle<{ theme: ThemeType }>`\n    * {\n        margin: 0;\n        padding: 0;\n        box-sizing: border-box;\n    }\n\n    body {\n        background: ${({theme}) => theme.body};\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n            'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n            sans-serif;\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n        width: 100%;\n        height: auto;\n    }\n\n    code {\n        font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;\n    }\n`;","export const Theme = {\n    contextMenu: {\n        background: 'black',\n        text: 'pink',\n        hover: {\n            text: 'coral',\n            background: 'white',\n        },\n    },\n    body: '#fff',\n};\n\nexport type ThemeType = typeof Theme;","export default __webpack_public_path__ + \"static/media/Where's Waldo Gobbling Gluttons.3e56f8b3.jpg\";","export default __webpack_public_path__ + \"static/media/Where's Waldo Ski Resort.e623c363.png\";","import { useState } from 'react';\nimport { HashRouter, Switch, Route } from 'react-router-dom';\nimport { ThemeProvider } from 'styled-components';\n\nimport NavBar from './components/NavBar';\nimport HomePage from './components/HomePage';\nimport WaldoGame from './components/WaldoGame';\nimport GameOver from './components/GameOver';\nimport PageNotFound from './components/PageNotFound';\n\nimport { GlobalStyles } from './components/styles/Global';\nimport { Theme } from './components/styles/Theme';\nimport { Container } from './components/styles/Container.styled';\n\nimport GobblingGluttons from './assets/Where\\'s Waldo Gobbling Gluttons.jpg';\nimport SkiResort from './assets/Where\\'s Waldo Ski Resort.png';\n\nexport default function App() {\n  const [isGameOver, setIsGameOver] = useState(false);\n\n  return (\n\n    <HashRouter>\n\n      <ThemeProvider theme={Theme}>\n      <GlobalStyles />\n\n        <NavBar setIsGameOver={setIsGameOver} />\n\n        <Switch>\n\n          <Route exact path='/' component={HomePage} />\n\n          <Route exact path='/gobbling-gluttons'>\n            {isGameOver\n              ? <GameOver isGameOver={isGameOver} setIsGameOver={setIsGameOver} />\n              : <WaldoGame isGameOver={isGameOver} setIsGameOver={setIsGameOver} img={GobblingGluttons} level='Gobbling Gluttons' />\n            }\n          </Route>\n\n          <Route exact path='/ski-resort'>\n            {isGameOver\n              ? <GameOver isGameOver={isGameOver} setIsGameOver={setIsGameOver} />\n              : <WaldoGame isGameOver={isGameOver} setIsGameOver={setIsGameOver} img={SkiResort} level='Ski Resort' />\n            }\n          </Route>\n\n          <Route component={PageNotFound} />\n\n        </Switch>\n\n      </ThemeProvider>\n\n    </HashRouter>\n  );\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { initializeApp } from 'firebase/app';\nimport { getFirestore } from 'firebase/firestore';\nimport App from './App';\n\nconst firebaseConfig = {\n\n  apiKey: \"AIzaSyA-_xHp4FOaCpr4mQkqyLxpg_YW3JhmPfQ\",\n\n  authDomain: \"wheres-waldo-78b7d.firebaseapp.com\",\n\n  projectId: \"wheres-waldo-78b7d\",\n\n  storageBucket: \"wheres-waldo-78b7d.appspot.com\",\n\n  messagingSenderId: \"91226203075\",\n\n  appId: \"1:91226203075:web:01c1fbfc3ca1bf8df11376\"\n\n};\n\nconst app = initializeApp(firebaseConfig);\nexport const db = getFirestore(app);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}