{"version":3,"sources":["components/styles/Nav.styled.ts","components/styles/DropDown.styled.ts","components/LevelSelect.tsx","components/NavBar.tsx","components/styles/Container.styled.ts","assets/Where'sWaldo.png","assets/Odlaw.png","assets/Waldo.png","assets/Wenda.png","assets/WizardWhitebeard.png","components/HomePage.tsx","components/SelectionMenu.tsx","components/styles/GameContainer.styled.ts","components/styles/ContextMenu.styled.ts","components/WaldoGame.tsx","assets/WaldoFound.png","components/GameOver.tsx","components/PageNotFound.tsx","components/styles/Global.ts","components/styles/Theme.ts","assets/GobblingGluttons.jpg","assets/SkiResort.png","App.tsx","index.tsx"],"names":["Nav","styled","nav","DropDown","aside","props","isDropDownOpen","theme","contextMenu","selectionMenu","hover","text","LevelSelect","useState","setIsDropDownOpen","switchLevel","setIsGameOver","onClick","exact","to","NavBar","Container","div","ContainerRow","HomePage","src","WheresWaldo","alt","Waldo","Wenda","Wizard","Odlaw","SelectionMenu","getCoords","selection","a","docRef","doc","db","level","getDoc","docSnap","exists","waldoCoords","data","console","error","handleClick","e","target","textContent","setIsContextMenuOpen","isContextMenuOpen","Math","abs","mouseCoords","x","y","log","setIsOdlawFound","setIsWaldoFound","setIsWendaFound","setIsWizardFound","isFound","character","isOdlawFound","isWaldoFound","isWendaFound","isWizardFound","characters","map","GameContainer","section","targetSize","ContextMenu","menuCoords","background","TargetingBox","targetingBox","borderColor","WaldoGame","setMouseCoords","setMenuCoords","isContextOpen","setIsContextOpen","setCharacters","history","useHistory","firstRender","useRef","getDocs","collection","characterList","forEach","push","id","getMouseCoords","getBoundingClientRect","width","height","nativeEvent","offsetX","offsetY","mouseX","round","mouseY","pageX","pageY","useEffect","current","gameOver","includes","getCharacters","location","img","draggable","GameOver","WaldoFound","PageNotFound","GlobalStyles","createGlobalStyle","body","Theme","App","isGameOver","path","component","GobblingGluttons","SkiResort","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","getFirestore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5f6ff77f.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Nav = styled.nav`\n\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    padding: 16px;\n\n    h1 > a {\n        color: black;\n    }\n\n    a {\n        text-decoration: none;\n    }\n\n    ul {\n        display: flex;\n        flex-direction: rows;\n        gap: 10px;\n        list-style: none;\n    }\n`;","import styled from 'styled-components';\n\ninterface DropDownProps {\n    isDropDownOpen: boolean;\n};\n\nexport const DropDown = styled.aside<DropDownProps>`\n    transition: all 3s;\n\n    p {\n        cursor: pointer;\n    }\n\n    ul {\n        display: flex;\n        flex-direction: column;\n        justify-content: space-around;\n        text-align: center;\n        position: absolute;\n        background: white;\n        width: auto;\n        height: ${props=>props.isDropDownOpen ? '100px' : '0px'};\n        transition: all 1s;\n        border-radius: 15px;\n    }\n\n    li {\n        opacity: ${props=>props.isDropDownOpen ? 1 : 0};\n        display: ${props=>props.isDropDownOpen ? 'inline-block' : 'none'}; // 'none' or 'flex'\n        transition: all 1s;\n    }\n\n    .active {\n        color: ${props=>props.theme.contextMenu.selectionMenu.hover.text};\n    }\n`","import { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport { DropDown } from './styles/DropDown.styled';\n\ninterface LevelSelectProps {\n    setIsGameOver: React.Dispatch<React.SetStateAction<boolean>>;\n};\n\nexport default function LevelSelect(props: LevelSelectProps) {\n    \n    const [isDropDownOpen, setIsDropDownOpen] = useState(false);\n\n    function handleClick() {\n        setIsDropDownOpen(!isDropDownOpen);\n    };\n\n    function switchLevel() {\n        props.setIsGameOver(false);\n        setIsDropDownOpen(false);\n    };\n\n    return(\n        <DropDown isDropDownOpen={isDropDownOpen} >\n        <p onClick={handleClick} >Level Select</p>\n        <ul>\n            <li onClick={switchLevel} ><NavLink exact to='/gobbling-gluttons'>Gobbling Gluttons</NavLink></li>\n            <li onClick={switchLevel} ><NavLink exact to='/ski-resort'>Ski Resort</NavLink></li>\n        </ul>\n        </DropDown>\n    );\n};","import { Link } from 'react-router-dom';\nimport { Nav } from \"./styles/Nav.styled\"\n\nimport LevelSelect from './LevelSelect';\n\ninterface NavProps {\n    setIsGameOver: React.Dispatch<React.SetStateAction<boolean>>;\n};\n\nexport default function NavBar(props: NavProps) {\n\n    function handleClick() {\n        props.setIsGameOver(false);\n    };\n\n    return(\n        <Nav>\n            <h1 onClick={handleClick} ><Link to='/'>Where's Waldo?</Link></h1>\n\n            <LevelSelect setIsGameOver={props.setIsGameOver} />\n            \n        </Nav>\n    );\n};","import styled from 'styled-components';\n\nexport const Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    flex-wrap: wrap;\n    align-items: center;\n    width: 100%;\n    height: auto;\n    text-align: center;\n    gap: 64px;\n\n    img {\n        height: 35vh;\n        width: auto;\n        padding: 32px;\n    }\n`\n\nexport const ContainerRow = styled(Container)`\n    flex-direction: row;\n`","export default __webpack_public_path__ + \"static/media/Where'sWaldo.13ab699b.png\";","export default __webpack_public_path__ + \"static/media/Odlaw.7f2337c8.png\";","export default __webpack_public_path__ + \"static/media/Waldo.2a7963c3.png\";","export default __webpack_public_path__ + \"static/media/Wenda.c2c5c953.png\";","export default __webpack_public_path__ + \"static/media/WizardWhitebeard.77d677dc.png\";","import { Container, ContainerRow } from './styles/Container.styled';\n\nimport WheresWaldo from '../assets/Where\\'sWaldo.png';\nimport Odlaw from '../assets/Odlaw.png';\nimport Waldo from '../assets/Waldo.png';\nimport Wenda from '../assets/Wenda.png';\nimport Wizard from '../assets/WizardWhitebeard.png';\n\nexport default function HomePage() {\n    return (\n        <Container>\n\n            <figure>\n                <img src={WheresWaldo} alt=\"Where's Waldo?\" />\n            </figure>\n\n            <Container>\n\n                <p>Look for these characters!</p>\n\n                <ContainerRow>\n\n                    <figure>\n                        <figcaption>Waldo</figcaption>\n                        <img src={Waldo} alt='Waldo' />\n                    </figure>\n\n                    <figure>\n                        <figcaption>Wenda</figcaption>\n                        <img src={Wenda} alt='Wenda' />\n                    </figure>\n\n                    <figure>\n                        <figcaption>Wizard</figcaption>\n                        <img src={Wizard} alt='Wizard' />\n                    </figure>\n\n                    <figure>\n                        <figcaption>Odlaw</figcaption>\n                        <img src={Odlaw} alt='Odlaw' />\n                    </figure>\n\n                </ContainerRow>\n            </Container>\n        </Container>\n    );\n};","import { doc, getDoc } from 'firebase/firestore';\nimport { Coords } from './WaldoGame';\nimport { db } from '../index';\n\ninterface MenuProps {\n    isContextMenuOpen: boolean, setIsContextMenuOpen: React.Dispatch<React.SetStateAction<boolean>>;\n    img: string, level: string, characters: string[], mouseCoords: Coords;\n    isOdlawFound?: boolean, setIsOdlawFound: React.Dispatch<React.SetStateAction<boolean>>;\n    isWaldoFound?: boolean, setIsWaldoFound: React.Dispatch<React.SetStateAction<boolean>>;\n    isWendaFound?: boolean, setIsWendaFound: React.Dispatch<React.SetStateAction<boolean>>;\n    isWizardFound?: boolean, setIsWizardFound: React.Dispatch<React.SetStateAction<boolean>>;\n};\n\nexport default function SelectionMenu(props: MenuProps) {\n\n    async function getCoords(selection: string) {\n        const docRef = doc(db, props.level, selection);\n        const docSnap = await getDoc(docRef);\n\n        if (docSnap.exists()) {\n\n          const waldoCoords = docSnap.data();\n          return waldoCoords;\n\n        } else {\n\n          console.error('No such document!');\n\n        };\n    };\n\n    async function handleClick(e: any) {\n        const selection: string = e.target.textContent;\n        props.setIsContextMenuOpen(!props.isContextMenuOpen);\n\n        const waldoCoords = await getCoords(selection);\n\n        if (waldoCoords) {\n\n            // Test if the selection is within the area\n            if ((Math.abs(props.mouseCoords.x - waldoCoords.x) < 25) && (Math.abs(props.mouseCoords.y - waldoCoords.y) < 42)) {\n\n                console.log(`You found ${selection}!`);\n\n                switch (selection) {\n\n                    case 'Odlaw':\n                        props.setIsOdlawFound(true);\n                        break;\n                        \n                    case 'Waldo':\n                        props.setIsWaldoFound(true);\n                        break;\n\n                    case 'Wenda':\n                        props.setIsWendaFound(true);\n                        break;\n\n                    case 'Wizard':\n                        props.setIsWizardFound(true);\n                        break;\n                };\n\n            } else {\n\n              console.log(`${selection} not found, try again!`);\n\n            };\n        };\n    };\n\n    function isFound(character: string): boolean {\n        \n        switch (character) {\n\n            case 'Odlaw':\n                return props.isOdlawFound ? true : false;\n\n            case 'Waldo':\n                return props.isWaldoFound ? true : false;\n\n            case 'Wenda':\n                return props.isWendaFound ? true : false;\n\n            case 'Wizard':\n                return props.isWizardFound ? true : false;\n\n            default:\n                return false;\n        };\n    };\n\n    return (\n        // <TargetingBox />\n        <ul>\n            {props.characters.map(character=>{\n                return (\n                    <li onClick={handleClick} key={character} >{isFound(character) ? <s>{character}</s> : character}</li>\n                );\n            })}\n        </ul>\n    );\n};","import styled from \"styled-components\";\n\nexport const GameContainer = styled.section`\n    display: flex;\n    user-select: none;\n    width: 100%;\n    height: auto;\n\n    img {\n        --webkit-user-drag: none;\n        object-fit: contain;\n        width: 100%;\n        height: auto;\n    }\n`;","import styled from \"styled-components\";\nimport { Coords } from '../WaldoGame';\nimport { ThemeType } from './Theme';\n\ninterface MenuProps {\n    theme?: ThemeType;\n    menuCoords: Coords;\n};\n\nconst targetSize = 75;\n\nexport const ContextMenu = styled.div<MenuProps>`\n    ul {\n        left: ${props=>props.menuCoords.x+(targetSize/2)+3}px;\n        top: ${props=>props.menuCoords.y-(targetSize/4)}px;\n        color: ${props=>props.theme.contextMenu.selectionMenu.text};\n        display: flex;\n        flex-direction: column;\n        position: absolute;\n        list-style: none;\n        background-color: ${props=>props.theme.contextMenu.selectionMenu.background};\n        padding: 3px;\n        border-radius: 7px;\n        gap: 3px;\n        z-index: 1;\n    }\n\n    li:hover {\n        color: ${props=>props.theme.contextMenu.selectionMenu.hover.text};\n        cursor: pointer;\n        background-color: ${props=>props.theme.contextMenu.selectionMenu.hover.background};\n        border-radius: 3px;\n    }\n`\n\nexport const TargetingBox = styled.div<MenuProps>`\n    left: ${props=>props.menuCoords.x-(targetSize/2)}px;\n    top: ${props=>props.menuCoords.y-(targetSize/2)}px;\n    display: flex;\n    position: absolute;\n    height: ${targetSize}px;\n    width: ${targetSize}px;\n    border: 5px dashed ${props=>props.theme.contextMenu.targetingBox.borderColor};\n    background-color: rgba(0, 0, 0, 0.3);\n    border-radius: 30px;\n    z-index: 1;\n`","import { useState, useEffect, useRef } from 'react';\nimport { useHistory } from 'react-router';\nimport { collection, getDocs } from 'firebase/firestore';\n\nimport SelectionMenu from './SelectionMenu';\n\nimport { GameContainer } from './styles/GameContainer.styled';\nimport { ContextMenu, TargetingBox } from './styles/ContextMenu.styled';\nimport { db } from '../index';\n\nexport interface Coords {\n  x: number,\n  y: number,\n};\n\ninterface GameProps {\n  isGameOver: boolean;\n  setIsGameOver: React.Dispatch<React.SetStateAction<boolean>>;\n  img: string, level: string;\n};\n\nexport default function WaldoGame(props: GameProps) {\n\n  const [mouseCoords, setMouseCoords] = useState({x:0,y:0});\n  const [menuCoords, setMenuCoords] = useState({x:0,y:0});\n  const [isContextOpen, setIsContextOpen] = useState(false);\n  const [isOdlawFound, setIsOdlawFound] = useState(false);\n  const [isWaldoFound, setIsWaldoFound] = useState(false);\n  const [isWendaFound, setIsWendaFound] = useState(false);\n  const [isWizardFound, setIsWizardFound] = useState(false);\n  const [characters, setCharacters] = useState<string[]>([]);\n\n  const history = useHistory();\n  const firstRender = useRef(true);\n\n  useEffect(() => {\n\n    if (firstRender.current) {\n      firstRender.current = false;\n      return;\n    };\n\n    let gameOver: boolean[] = [];\n  \n    for (let character in characters) {\n  \n      switch (characters[character]) {\n  \n        case 'Odlaw':\n          gameOver.push(isOdlawFound);\n          break;\n              \n        case 'Waldo':\n          gameOver.push(isWaldoFound);\n          break;\n  \n        case 'Wenda':\n          gameOver.push(isWendaFound);\n          break;\n  \n        case 'Wizard':\n          gameOver.push(isWizardFound);\n          break;\n  \n      };\n  \n    };\n  \n    if (gameOver.includes(false)) {\n  \n      return;\n  \n    } else {\n  \n      return props.setIsGameOver(true);\n  \n    };\n    \n  }, [isOdlawFound, isWaldoFound, isWendaFound, isWizardFound]);\n\n  useEffect((): void => {\n    \n    resetCharacters();\n    getCharacters();\n\n  }, [history.location]);\n\n  function resetCharacters() {\n    setIsOdlawFound(false);\n    setIsWaldoFound(false);\n    setIsWendaFound(false);\n    setIsWizardFound(false);\n  };\n\n  async function getCharacters() {\n    const characterList = await getDocs(collection(db, props.level));\n    const characters: string[] = [];\n    characterList.forEach(character=>{\n      characters.push(character.id);\n    });\n    setCharacters(characters);\n};\n\n  function getMouseCoords(e: any) {\n    const { width, height }: { width: number; height: number; } = e.target.getBoundingClientRect();\n    const { offsetX, offsetY }: { offsetX: number; offsetY: number; } = e.nativeEvent;\n\n    const mouseX = (Math.round((offsetX / width) * 1000));\n    const mouseY = (Math.round((offsetY / height) * 1000));\n    const { pageX: menuX, pageY: menuY }: { pageX: number, pageY: number } = e;\n\n    const menuCoords: Coords = {\n      x: menuX,\n      y: menuY,\n    };\n\n    const mouseCoords: Coords = {\n      x: mouseX,\n      y: mouseY,\n    };\n\n    setMouseCoords(mouseCoords);\n    setMenuCoords(menuCoords);\n  };\n\n  async function handleClick(e: any) {\n    getMouseCoords(e);\n    setIsContextOpen(!isContextOpen);\n  };\n\n  return (\n    <GameContainer>\n      {isContextOpen\n        ? <ContextMenu menuCoords={menuCoords} >\n            <TargetingBox onClick={handleClick} menuCoords={menuCoords} />\n            <SelectionMenu isContextMenuOpen={isContextOpen} setIsContextMenuOpen={setIsContextOpen}\n              img={props.img} level={props.level} characters={characters} mouseCoords={mouseCoords}\n              isOdlawFound={isOdlawFound} setIsOdlawFound={setIsOdlawFound}\n              isWaldoFound={isWaldoFound} setIsWaldoFound={setIsWaldoFound}\n              isWendaFound={isWendaFound} setIsWendaFound={setIsWendaFound}\n              isWizardFound={isWizardFound} setIsWizardFound={setIsWizardFound} />\n            </ContextMenu>\n        : null}\n      <img onClick={handleClick} src={props.img} draggable=\"false\" alt=\"Where's Waldo?\" />\n    </GameContainer>\n  );\n};","export default __webpack_public_path__ + \"static/media/WaldoFound.80f74ad0.png\";","import { Container } from './styles/Container.styled';\n\nimport WaldoFound from '../assets/WaldoFound.png';\n\ninterface GameOverProps {\n    isGameOver: boolean, setIsGameOver: React.Dispatch<React.SetStateAction<boolean>>;\n};\n\nexport default function GameOver(props: GameOverProps) {\n\n    function handleClick() {\n        props.setIsGameOver(false);\n    };\n\n    return(\n        <Container>\n            <section>\n\n                <figure>\n                    <img src={WaldoFound} alt='You found Waldo!' />\n                    <figcaption>You found Waldo!</figcaption>\n                </figure>\n\n                <button onClick={handleClick}>Play Again</button>\n\n            </section>\n        </Container>\n    );\n};","export default function PageNotFound() {\n    return(\n        <div>\n            Error 404 - Page Not Found\n        </div>\n    );\n};","import { createGlobalStyle } from 'styled-components';\nimport { ThemeType } from './Theme';\n\nexport const GlobalStyles = createGlobalStyle<{ theme: ThemeType }>`\n    * {\n        margin: 0;\n        padding: 0;\n        box-sizing: border-box;\n    }\n\n    body {\n        background: ${({theme}) => theme.body};\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n            'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n            sans-serif;\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n        width: 100%;\n        height: auto;\n    }\n\n    code {\n        font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;\n    }\n`;","export const Theme = {\n    contextMenu: {\n        selectionMenu: {\n            background: 'black',\n            text: 'pink',\n            hover: {\n                text: 'coral',\n                background: 'white',\n            },\n        },\n        targetingBox: {\n            borderColor: '#39ff14', // Neon green\n        },\n    },\n    body: '#fff',\n};\n\nexport type ThemeType = typeof Theme;","export default __webpack_public_path__ + \"static/media/GobblingGluttons.3e56f8b3.jpg\";","export default __webpack_public_path__ + \"static/media/SkiResort.e623c363.png\";","import { useState } from 'react';\nimport { HashRouter, Switch, Route } from 'react-router-dom';\nimport { ThemeProvider } from 'styled-components';\n\nimport NavBar from './components/NavBar';\nimport HomePage from './components/HomePage';\nimport WaldoGame from './components/WaldoGame';\nimport GameOver from './components/GameOver';\nimport PageNotFound from './components/PageNotFound';\n\nimport { GlobalStyles } from './components/styles/Global';\nimport { Theme } from './components/styles/Theme';\n\nimport GobblingGluttons from './assets/GobblingGluttons.jpg';\nimport SkiResort from './assets/SkiResort.png';\n\nexport default function App() {\n  const [isGameOver, setIsGameOver] = useState(false);\n\n  return (\n\n    <HashRouter>\n\n      <ThemeProvider theme={Theme}>\n      <GlobalStyles />\n\n        <NavBar setIsGameOver={setIsGameOver} />\n\n        <Switch>\n\n          <Route exact path='/' component={HomePage} />\n\n          <Route exact path='/gobbling-gluttons'>\n            {isGameOver\n              ? <GameOver isGameOver={isGameOver} setIsGameOver={setIsGameOver} />\n              : <WaldoGame isGameOver={isGameOver} setIsGameOver={setIsGameOver} img={GobblingGluttons} level='Gobbling Gluttons' />\n            }\n          </Route>\n\n          <Route exact path='/ski-resort'>\n            {isGameOver\n              ? <GameOver isGameOver={isGameOver} setIsGameOver={setIsGameOver} />\n              : <WaldoGame isGameOver={isGameOver} setIsGameOver={setIsGameOver} img={SkiResort} level='Ski Resort' />\n            }\n          </Route>\n\n          <Route component={PageNotFound} />\n\n        </Switch>\n\n      </ThemeProvider>\n\n    </HashRouter>\n  );\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { initializeApp } from 'firebase/app';\nimport { getFirestore } from 'firebase/firestore';\nimport App from './App';\n\nconst firebaseConfig = {\n\n  apiKey: \"AIzaSyA-_xHp4FOaCpr4mQkqyLxpg_YW3JhmPfQ\",\n\n  authDomain: \"wheres-waldo-78b7d.firebaseapp.com\",\n\n  projectId: \"wheres-waldo-78b7d\",\n\n  storageBucket: \"wheres-waldo-78b7d.appspot.com\",\n\n  messagingSenderId: \"91226203075\",\n\n  appId: \"1:91226203075:web:01c1fbfc3ca1bf8df11376\"\n\n};\n\nconst app = initializeApp(firebaseConfig);\nexport const db = getFirestore(app);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}