{"version":3,"sources":["components/Timer.tsx","components/styles/DropDown.styled.ts","components/LevelSelect.tsx","components/styles/Nav.styled.ts","components/NavBar.tsx","components/styles/Tooltip.styled.ts","components/WaldoModeTooltip.tsx","components/styles/HomeContainer.styled.ts","assets/Where'sWaldo.png","assets/characters/Odlaw.png","assets/characters/Waldo.png","assets/characters/Wenda.png","assets/characters/WizardWhitebeard.png","assets/characters/Woof.png","components/HomePage.tsx","components/styles/Banner.styled.ts","components/Notification.tsx","components/SelectionMenu.tsx","components/styles/GameContainer.styled.ts","components/styles/ContextMenu.styled.ts","components/WaldoGame.tsx","components/styles/GameOverContainer.styled.ts","assets/WaldoFound.png","components/GameOver.tsx","components/styles/HighScoresContainer.styled.ts","assets/CharacterBanner.png","components/HighScores.tsx","components/PageNotFound.tsx","components/styles/Global.ts","components/styles/Theme.ts","App.tsx","index.tsx"],"names":["Timer","props","useEffect","isGameOver","setIsTimerOn","interval","isTimerOn","setInterval","setTime","prevTime","clearInterval","onClick","Math","floor","time","toString","slice","DropDown","styled","aside","isDropDownOpen","theme","sizing","ul","padding","colors","secondary","borderRadius","primary","LevelSelect","useState","setIsDropDownOpen","switchLevel","setIsGameOver","id","levelList","map","level","index","exact","to","path","name","Nav","nav","NavBar","history","useHistory","handleClick","setIsGameOn","setLevel","undefined","listen","action","isGameOn","Tooltip","isTooltipOpen","waldoMode","WaldoModeTooltip","MainContainer","main","HomeContainer","section","LevelContainer","CharacterContainer","DifficultyGrid","SwitchContainer","div","HomePage","setIsTooltipOpen","checkRef","useRef","toggleTooltip","current","checked","src","WheresWaldo","alt","onMouseEnter","onMouseLeave","htmlFor","className","ref","setWaldoMode","type","img","Waldo","Wenda","Wizard","Odlaw","Woof","Banner","notificationData","isCharacterFound","Notification","character","SelectionMenu","getCoords","selection","a","docRef","doc","db","getDoc","docSnap","exists","waldoCoords","data","console","error","e","target","textContent","setIsContextMenuOpen","isContextMenuOpen","abs","mouseCoords","x","y","clearTimeout","timer","setNotificationData","isNotificationOpen","setTimeout","setIsOdlawFound","setIsWaldoFound","setIsWendaFound","setIsWizardFound","setIsWoofFound","isFound","isOdlawFound","isWaldoFound","isWendaFound","isWizardFound","isWoofFound","characters","GameContainer","PauseScreen","p","ContextMenu","menuCoords","TargetingBox","targetingBox","WaldoGame","setMouseCoords","setMenuCoords","isContextOpen","setIsContextOpen","setCharacter","setCharacters","firstRender","getDocs","collection","characterList","forEach","push","getMouseCoords","getBoundingClientRect","width","height","nativeEvent","offsetX","offsetY","mouseX","round","mouseY","pageX","pageY","gameOver","includes","getCharacters","location","draggable","GameOver","usernameRef","preventDefault","pathname","state","username","value","addDoc","WaldoFound","onSubmit","required","HighScoresContainer","HighScoresContainerRow","HighScores","levelScores","setLevelScores","levelPath","setLevelPath","useLocation","leaderboard","newLevel","querySnapshot","score","scoreData","newLevelScores","sort","b","difficultyToggle","giveMedals","document","getElementById","yOffset","top","window","pageYOffset","scrollTo","behavior","getLevelScores","CharacterBanner","PageNotFound","GlobalStyles","createGlobalStyle","Theme","App","setLevelList","q","query","getLevels","component","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","getFirestore","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e48c0b90.chunk.js","sourcesContent":["import { useEffect } from 'react';\n\ninterface TimerProps {\n  time: number;\n  setTime: React.Dispatch<React.SetStateAction<number>>;\n  isGameOver: boolean;\n  isTimerOn: boolean;\n  setIsTimerOn: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nexport default function Timer(props: TimerProps) {\n  useEffect(() => {\n    if (props.isGameOver === false) {\n      props.setIsTimerOn(true);\n    } else {\n      props.setIsTimerOn(false);\n    }\n  }, [props.isGameOver]);\n\n  useEffect(() => {\n    let interval: NodeJS.Timeout;\n\n    if (props.isTimerOn) {\n      interval = setInterval(() => {\n        props.setTime(prevTime => prevTime + 10);\n      }, 10);\n    }\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [props.isTimerOn]);\n\n  function handleClick() {\n    props.setIsTimerOn(!props.isTimerOn);\n  }\n\n  return (\n    <time onClick={handleClick}>\n      <span>\n        {Math.floor((props.time / 60000) % 60)\n          .toString()\n          .slice(-2)}\n        :\n      </span>\n      <span>{('0' + Math.floor((props.time / 1000) % 60)).slice(-2)}</span>\n    </time>\n  );\n}\n","import styled from 'styled-components';\n\ninterface DropDownProps {\n  isDropDownOpen: boolean;\n}\n\nexport const DropDown = styled.aside<DropDownProps>`\n  justify-self: end;\n  transition: all 3s;\n\n  #levelList {\n    display: ${props =>\n      props.isDropDownOpen ? 'flex' : 'none'}; // 'flex' or 'none'\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    text-align: center;\n    position: absolute;\n    background: white;\n    width: auto;\n    height: ${props => (props.isDropDownOpen ? 'auto' : '0px')};\n    margin: 3px 16px 0 0;\n    padding: ${props => props.theme.sizing.ul.padding};\n    border: 2px solid ${props => props.theme.colors.secondary};\n    border-radius: ${props => props.theme.sizing.ul.borderRadius};\n    transition: all 0.75s;\n    z-index: 1;\n    list-style-type: none;\n  }\n\n  a {\n    padding: 8px;\n    margin: 0;\n    opacity: ${props => (props.isDropDownOpen ? 1 : 0)};\n    display: ${props =>\n      props.isDropDownOpen\n        ? 'inline-block'\n        : 'none'}; // 'inline-block' or 'none'\n    transition: opacity, background-color, color, 0.25s;\n    width: 100%;\n    height: 100%;\n    color: ${props => props.theme.colors.primary};\n  }\n\n  a:hover {\n    background-color: ${props => props.theme.colors.primary};\n    border-radius: ${props => props.theme.sizing.ul.borderRadius};\n    color: white;\n  }\n\n  .active {\n    color: ${props => props.theme.colors.secondary};\n  }\n`;\n","import { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport { Level } from '../App';\n\nimport { DropDown } from './styles/DropDown.styled';\n\ninterface LevelSelectProps {\n  setIsGameOver: React.Dispatch<React.SetStateAction<boolean>>;\n  levelList: Level[];\n}\n\nexport default function LevelSelect(props: LevelSelectProps) {\n  const [isDropDownOpen, setIsDropDownOpen] = useState(false);\n\n  function handleClick() {\n    setIsDropDownOpen(!isDropDownOpen);\n  }\n\n  function switchLevel() {\n    props.setIsGameOver(false);\n    setIsDropDownOpen(false);\n  }\n\n  return (\n    <DropDown isDropDownOpen={isDropDownOpen}>\n      <button onClick={handleClick}>Level Select</button>\n      <ul id='levelList'>\n        {props.levelList.map((level: any, index) => {\n          return (\n            <NavLink onClick={switchLevel} exact to={level.path} key={index}>\n              <li>{level.name}</li>\n            </NavLink>\n          );\n        })}\n      </ul>\n    </DropDown>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Nav = styled.nav`\n  position: sticky;\n  top: 0;\n  display: grid;\n  grid-auto-flow: column;\n  grid-auto-columns: 1fr auto 1fr;\n  align-items: center;\n  padding: 16px;\n  background-color: white;\n  gap: 8px;\n  z-index: 1;\n\n  #first {\n    color: ${props => props.theme.colors.primary};\n  }\n\n  #second {\n    color: ${props => props.theme.colors.secondary};\n  }\n\n  time {\n    padding: 8px;\n    background-color: ${props => props.theme.colors.secondary};\n    color: white;\n    border-radius: 7px;\n    cursor: pointer;\n  }\n\n  section {\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-end;\n    gap: 8px;\n  }\n\n  button {\n    cursor: pointer;\n    color: white;\n    background-color: ${props => props.theme.colors.primary};\n    padding: 5px;\n    border-radius: 7px;\n    border: inherit;\n    font: inherit;\n\n    a {\n      color: white;\n    }\n  }\n\n  a {\n    text-decoration: none;\n  }\n\n  ul {\n    display: flex;\n    flex-direction: rows;\n    gap: 10px;\n    list-style: none;\n  }\n`;\n","import { useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\n\nimport Timer from './Timer';\nimport LevelSelect from './LevelSelect';\n\nimport { Level } from '../App';\n\nimport { Nav } from './styles/Nav.styled';\n\ninterface NavProps {\n  setIsGameOver: React.Dispatch<React.SetStateAction<boolean>>;\n  isGameOn: boolean;\n  setIsGameOn: React.Dispatch<React.SetStateAction<boolean>>;\n  time: number;\n  setTime: React.Dispatch<React.SetStateAction<number>>;\n  isTimerOn: boolean;\n  setIsTimerOn: React.Dispatch<React.SetStateAction<boolean>>;\n  isGameOver: boolean;\n  setLevel: React.Dispatch<React.SetStateAction<string | undefined>>;\n  levelList: Level[];\n}\n\nexport default function NavBar(props: NavProps) {\n  const history = useHistory();\n\n  useEffect(() => {\n    return history.listen(() => {\n      if (history.action === 'POP') {\n        handleClick();\n      }\n    });\n  });\n\n  function handleClick() {\n    props.setIsGameOver(false);\n    props.setIsGameOn(false);\n    props.setLevel(undefined);\n  }\n\n  return (\n    <Nav id='nav'>\n      <h1 onClick={handleClick}>\n        <Link to='/'>\n          <span id='first'>Where's</span> <span id='second'>Waldo?</span>\n        </Link>\n      </h1>\n\n      {props.isGameOn ? (\n        <Timer\n          time={props.time}\n          setTime={props.setTime}\n          isTimerOn={props.isTimerOn}\n          setIsTimerOn={props.setIsTimerOn}\n          isGameOver={props.isGameOver}\n        />\n      ) : null}\n\n      <section>\n        <LevelSelect\n          setIsGameOver={props.setIsGameOver}\n          levelList={props.levelList}\n        />\n        <Link onClick={handleClick} to='/high-scores'>\n          <button>High Scores</button>\n        </Link>\n      </section>\n    </Nav>\n  );\n}\n","import styled from 'styled-components';\n\ninterface TooltipProps {\n  isTooltipOpen: boolean;\n  waldoMode: boolean;\n}\n\nexport const Tooltip = styled.aside<TooltipProps>`\n  justify-self: end;\n  transition: all 3s;\n\n  display: ${props =>\n    props.isTooltipOpen ? 'flex' : 'none'}; // 'flex' or 'none'\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  position: absolute;\n  background: white;\n  bottom: 50px;\n  width: auto;\n  height: ${props => (props.isTooltipOpen ? 'auto' : '0px')};\n  padding: ${props => props.theme.sizing.ul.padding};\n  border: 2px solid\n    ${props =>\n      props.waldoMode\n        ? props.theme.colors.primary\n        : props.theme.colors.secondary};\n  border-radius: ${props => props.theme.sizing.ul.borderRadius};\n  transition: all 0.75s;\n  z-index: 1;\n  list-style-type: none;\n\n  p {\n    padding: 8px;\n    margin: 0;\n    opacity: ${props => (props.isTooltipOpen ? 1 : 0)};\n    display: ${props =>\n      props.isTooltipOpen\n        ? 'inline-block'\n        : 'none'}; // 'inline-block' or 'none'\n    transition: opacity, background-color, color, 0.25s;\n    width: 100%;\n    height: 100%;\n  }\n`;\n","import { Tooltip } from './styles/Tooltip.styled';\n\ninterface WaldoModeTooltipProps {\n  isTooltipOpen: boolean;\n  waldoMode: boolean;\n}\n\nexport default function WaldoModeTooltip(props: WaldoModeTooltipProps) {\n  return (\n    <Tooltip isTooltipOpen={props.isTooltipOpen} waldoMode={props.waldoMode}>\n      {props.waldoMode ? (\n        <p>\n          When \"Waldo Mode\" is enabled you <b>only need to find Waldo</b> to\n          complete the selected level!\n        </p>\n      ) : (\n        <p>\n          When \"Challenge Mode\" is enabled you{' '}\n          <b>need to find every hidden character</b> (besides Woof) to complete\n          the selected level!\n        </p>\n      )}\n    </Tooltip>\n  );\n}\n","import styled from 'styled-components';\n\ninterface SwitchProps {\n  waldoMode: boolean;\n}\n\nexport const MainContainer = styled.main<SwitchProps>`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 16px;\n  gap: 16px;\n  width: 100%;\n  height: auto;\n  text-align: center;\n\n  figure {\n    padding: 0;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 8px;\n    height: auto;\n    text-align: center;\n    overflow-x: none;\n  }\n\n  img {\n    object-fit: contain;\n  }\n\n  #homeLogo {\n    border: none;\n    width: 100%;\n    img {\n      width: 100%;\n      max-height: 35vh;\n    }\n  }\n\n  a {\n    border: 3px solid\n      ${props =>\n        props.waldoMode\n          ? props.theme.colors.primary\n          : props.theme.colors.secondary};\n    border-radius: 8px;\n    padding: 16px;\n  }\n\n  h3 {\n    color: white;\n    color: black;\n    padding: 8px;\n    border-radius: 7px;\n  }\n`;\n\nexport const HomeContainer = styled.section`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: auto;\n  gap: 16px;\n\n  figure {\n    height: auto;\n  }\n\n  a {\n    text-decoration: none;\n  }\n\n  figcaption {\n    color: ${props => props.theme.colors.secondary};\n  }\n`;\n\nexport const LevelContainer = styled(HomeContainer)`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  justify-content: space-around;\n  padding: 0 3vw;\n  height: auto;\n\n  a {\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    gap: 8px;\n  }\n\n  img {\n    width: 100%;\n    height: 30vh;\n    object-fit: cover;\n    object-position: right bottom;\n    border-radius: 5px;\n  }\n\n  @media only screen and (max-width: 1000px) {\n    figure > * {\n      width: 100%;\n    }\n  }\n  @media only screen and (max-width: 800px) {\n    grid-auto-flow: row;\n    grid-template-columns: 1fr 1fr;\n  }\n  @media only screen and (max-width: 600px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nexport const CharacterContainer = styled(LevelContainer)`\n  grid-auto-flow: column;\n  grid-auto-columns: 1fr;\n  justify-items: center;\n  img {\n    width: auto;\n    max-width: 200px;\n    object-fit: contain;\n  }\n  @media only screen and (max-width: 800px) {\n    grid-auto-flow: row;\n    grid-template-columns: 1fr 1fr 1fr;\n    img {\n      height: 25vh;\n      max-width: 100px;\n    }\n  }\n  @media only screen and (max-width: 500px) {\n    grid-template-columns: 1fr 1fr;\n  }\n  @media only screen and (max-width: 300px) {\n    display: flex;\n  }\n`;\n\nexport const ItemContainer = styled(CharacterContainer)`\n  @media only screen and (max-width: 1000px) {\n    img {\n      height: 100px;\n      width: 100px;\n    }\n  }\n`;\n\nexport const DifficultyGrid = styled.section`\n  display: flex;\n  position: relative;\n  flex-wrap: wrap;\n  justify-content: center;\n  flex-direction: column;\n  width: 100%;\n  height: auto;\n`;\n\nexport const SwitchContainer = styled.div<SwitchProps>`\n  position: absolute;\n  align-self: flex-end;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  margin: 0 7vw 0 0;\n  user-select: none;\n  @media only screen and (max-width: 669px) {\n    position: relative;\n    align-self: center;\n    margin: 8px 0 0 0;\n  }\n\n  label {\n    width: fit-content;\n    overflow: hidden;\n    white-space: nowrap;\n  }\n\n  /* The switch - the box around the slider */\n  .switch {\n    position: relative;\n    display: inline-block;\n    width: 60px;\n    height: 34px;\n    flex-shrink: 0;\n  }\n\n  /* Hide default HTML checkbox */\n  input {\n    opacity: 0;\n    width: 0;\n    height: 0;\n  }\n\n  /* The slider */\n  span {\n    position: absolute;\n    cursor: pointer;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: ${props =>\n      props.waldoMode\n        ? props.theme.colors.primary\n        : props.theme.colors.secondary};\n    -webkit-transition: 0.4s;\n    transition: 0.4s;\n    border-radius: 34px;\n  }\n\n  span:before {\n    position: absolute;\n    content: '';\n    height: 26px;\n    min-width: 26px;\n    left: 4px;\n    bottom: 4px;\n    background-color: white;\n    -webkit-transition: 0.4s;\n    transition: 0.4s;\n    border-radius: 50%;\n  }\n\n  input:focus + span {\n    box-shadow: 0 0 1px ${props => props.theme.colors.secondary};\n  }\n\n  input:checked + span:before {\n    -webkit-transform: translateX(26px);\n    -ms-transform: translateX(26px);\n    transform: translateX(26px);\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/Where'sWaldo.13ab699b.png\";","export default __webpack_public_path__ + \"static/media/Odlaw.7f2337c8.png\";","export default __webpack_public_path__ + \"static/media/Waldo.2a7963c3.png\";","export default __webpack_public_path__ + \"static/media/Wenda.c2c5c953.png\";","export default __webpack_public_path__ + \"static/media/WizardWhitebeard.77d677dc.png\";","export default __webpack_public_path__ + \"static/media/Woof.b5718edf.png\";","import { useState, useEffect, useRef } from 'react';\n\nimport { Link } from 'react-router-dom';\n\nimport { Level } from '../App';\n\nimport WaldoModeTooltip from './WaldoModeTooltip';\n\nimport {\n  MainContainer,\n  HomeContainer,\n  LevelContainer,\n  CharacterContainer,\n  // ItemContainer,\n  DifficultyGrid,\n  SwitchContainer,\n} from './styles/HomeContainer.styled';\n\nimport WheresWaldo from \"../assets/Where'sWaldo.png\";\n\nimport Odlaw from '../assets/characters/Odlaw.png';\nimport Waldo from '../assets/characters/Waldo.png';\nimport Wenda from '../assets/characters/Wenda.png';\nimport Wizard from '../assets/characters/WizardWhitebeard.png';\nimport Woof from '../assets/characters/Woof.png';\n\n// import Binoculars from '../assets/items/Binoculars.png';\n// import Bone from '../assets/items/Bone.png';\n// import Camera from '../assets/items/Camera.png';\n// import Key from '../assets/items/Key.png';\n// import Scroll from '../assets/items/Scroll.png';\n\ninterface HomePageProps {\n  levelList: Level[];\n  waldoMode: boolean;\n  setWaldoMode: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nexport default function HomePage(props: HomePageProps) {\n  const [isTooltipOpen, setIsTooltipOpen] = useState(false);\n\n  const checkRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (checkRef.current) {\n      if (props.waldoMode) {\n        checkRef.current.checked = false;\n      } else {\n        checkRef.current.checked = true;\n      }\n    }\n  }, []);\n\n  function handleClick() {\n    props.setWaldoMode(!props.waldoMode);\n  }\n\n  function toggleTooltip() {\n    setIsTooltipOpen(!isTooltipOpen);\n  }\n\n  return (\n    <MainContainer waldoMode={props.waldoMode}>\n      <figure id='homeLogo'>\n        <img src={WheresWaldo} alt=\"Where's Waldo?\" />\n      </figure>\n\n      <HomeContainer>\n        <DifficultyGrid>\n          <h3>Choose a level!</h3>\n\n          <SwitchContainer\n            onMouseEnter={toggleTooltip}\n            onMouseLeave={toggleTooltip}\n            waldoMode={props.waldoMode}\n          >\n            <WaldoModeTooltip\n              isTooltipOpen={isTooltipOpen}\n              waldoMode={props.waldoMode}\n            />\n            <label htmlFor='checkbox'>\n              {props.waldoMode ? 'Waldo' : 'Challenge'} Mode\n            </label>\n            <label className='switch'>\n              <input\n                ref={checkRef}\n                onClick={handleClick}\n                type='checkbox'\n                id='checkbox'\n              />\n              <span></span>\n            </label>\n          </SwitchContainer>\n        </DifficultyGrid>\n\n        <LevelContainer>\n          {props.levelList.map((level: any, index) => {\n            return (\n              <figure key={index}>\n                <Link to={level.path}>\n                  <figcaption>\n                    <b>{level.name}</b>\n                  </figcaption>\n                  <img src={level.img} alt={level.name} />\n                </Link>\n              </figure>\n            );\n          })}\n        </LevelContainer>\n      </HomeContainer>\n\n      <HomeContainer>\n        <h3>Look for these characters!</h3>\n\n        <CharacterContainer>\n          <figure>\n            <figcaption>\n              <b>Waldo</b>\n            </figcaption>\n            <img src={Waldo} alt='Waldo' />\n          </figure>\n\n          <figure>\n            <figcaption>\n              <b>Wenda</b>\n            </figcaption>\n            <img src={Wenda} alt='Wenda' />\n          </figure>\n\n          <figure>\n            <figcaption>\n              <b>Wizard</b>\n            </figcaption>\n            <img src={Wizard} alt='Wizard' />\n          </figure>\n\n          <figure>\n            <figcaption>\n              <b>Odlaw</b>\n            </figcaption>\n            <img src={Odlaw} alt='Odlaw' />\n          </figure>\n\n          <figure>\n            <figcaption>\n              <b>Woof</b>\n            </figcaption>\n            <img src={Woof} alt='Woof' />\n          </figure>\n        </CharacterContainer>\n      </HomeContainer>\n\n      {/* <HomeContainer>\n        <h3>Find these items!</h3>\n\n        <ItemContainer>\n          <figure>\n            <figcaption>\n              <b>Binoculars</b>\n            </figcaption>\n            <img src={Binoculars} alt='Binoculars' />\n          </figure>\n\n          <figure>\n            <figcaption>\n              <b>Bone</b>\n            </figcaption>\n            <img src={Bone} alt='Bone' />\n          </figure>\n\n          <figure>\n            <figcaption>\n              <b>Camera</b>\n            </figcaption>\n            <img src={Camera} alt='Camera' />\n          </figure>\n\n          <figure>\n            <figcaption>\n              <b>Key</b>\n            </figcaption>\n            <img src={Key} alt='Key' />\n          </figure>\n\n          <figure>\n            <figcaption>\n              <b>Scroll</b>\n            </figcaption>\n            <img src={Scroll} alt='Scroll' />\n          </figure>\n        </ItemContainer>\n      </HomeContainer> */}\n    </MainContainer>\n  );\n}\n","import styled from 'styled-components';\n\nimport { NotificationState } from '../WaldoGame';\n\ninterface BannerProps {\n  notificationData: NotificationState;\n}\n\nexport const Banner = styled.aside<BannerProps>`\n  position: fixed;\n  color: white;\n  top: 10rem;\n  left: 50%;\n  transform: translateX(-50%);\n  padding: 8px;\n  background-color: ${props =>\n    props.notificationData.isCharacterFound\n      ? props => props.theme.colors.primary\n      : props => props.theme.colors.secondary};\n  border-radius: ${props => props.theme.sizing.ul.borderRadius};\n  z-index: 1;\n`;\n","import { Banner } from './styles/Banner.styled';\n\nimport { NotificationState } from './WaldoGame';\n\ninterface NotificationProps {\n  notificationData: NotificationState;\n}\n\nexport default function Notification(props: NotificationProps) {\n  return (\n    <Banner notificationData={props.notificationData}>\n      {props.notificationData.isCharacterFound ? (\n        <span>\n          You found <b>{props.notificationData.character}</b>!\n        </span>\n      ) : (\n        <span>\n          <b>{props.notificationData.character}</b> not found, try again!\n        </span>\n      )}\n    </Banner>\n  );\n}\n","import { doc, getDoc } from 'firebase/firestore';\nimport { Coords, NotificationState } from './WaldoGame';\nimport { db } from '../index';\nimport React from 'react';\n\ninterface MenuProps {\n  isContextMenuOpen: boolean;\n  setIsContextMenuOpen: React.Dispatch<React.SetStateAction<boolean>>;\n  notificationData: NotificationState;\n  setNotificationData: React.Dispatch<React.SetStateAction<NotificationState>>;\n  img: string;\n  level: string;\n  character: string;\n  characters: string[];\n  mouseCoords: Coords;\n  isOdlawFound?: boolean;\n  setIsOdlawFound: React.Dispatch<React.SetStateAction<boolean>>;\n  isWaldoFound?: boolean;\n  setIsWaldoFound: React.Dispatch<React.SetStateAction<boolean>>;\n  isWendaFound?: boolean;\n  setIsWendaFound: React.Dispatch<React.SetStateAction<boolean>>;\n  isWizardFound?: boolean;\n  setIsWizardFound: React.Dispatch<React.SetStateAction<boolean>>;\n  isWoofFound?: boolean;\n  setIsWoofFound: React.Dispatch<React.SetStateAction<boolean>>;\n  waldoMode: boolean;\n}\n\nexport default function SelectionMenu(props: MenuProps) {\n  async function getCoords(selection: string) {\n    const docRef = doc(db, 'Levels', props.level, 'Coordinates', selection);\n    const docSnap = await getDoc(docRef);\n\n    if (docSnap.exists()) {\n      const waldoCoords = docSnap.data();\n      return waldoCoords;\n    } else {\n      console.error('No such document!');\n    }\n  }\n\n  async function handleClick(e: any) {\n    const selection: string = e.target.textContent;\n    props.setIsContextMenuOpen(!props.isContextMenuOpen);\n\n    const waldoCoords = await getCoords(selection);\n\n    if (waldoCoords) {\n      // Test if the selection is within the area\n      if (\n        Math.abs(props.mouseCoords.x - waldoCoords.x) < 25 &&\n        Math.abs(props.mouseCoords.y - waldoCoords.y) < 42\n      ) {\n        clearTimeout(props.notificationData.timer);\n\n        props.setNotificationData({\n          isNotificationOpen: true,\n          character: selection,\n          isCharacterFound: true,\n          timer: setTimeout(() => {\n            props.setNotificationData({\n              ...props.notificationData,\n              isNotificationOpen: false,\n            });\n          }, 3000),\n        });\n\n        switch (selection) {\n          case 'Odlaw':\n            props.setIsOdlawFound(true);\n            break;\n\n          case 'Waldo':\n            props.setIsWaldoFound(true);\n            break;\n\n          case 'Wenda':\n            props.setIsWendaFound(true);\n            break;\n\n          case 'Wizard':\n            props.setIsWizardFound(true);\n            break;\n\n          case 'Woof':\n            props.setIsWoofFound(true);\n            break;\n        }\n      } else {\n        clearTimeout(props.notificationData.timer);\n\n        props.setNotificationData({\n          isNotificationOpen: true,\n          character: selection,\n          isCharacterFound: false,\n          timer: setTimeout(() => {\n            props.setNotificationData({\n              ...props.notificationData,\n              isNotificationOpen: false,\n            });\n          }, 3000),\n        });\n      }\n    }\n  }\n\n  function isFound(character: string): boolean {\n    switch (character) {\n      case 'Odlaw':\n        return props.isOdlawFound ? true : false;\n\n      case 'Waldo':\n        return props.isWaldoFound ? true : false;\n\n      case 'Wenda':\n        return props.isWendaFound ? true : false;\n\n      case 'Wizard':\n        return props.isWizardFound ? true : false;\n\n      case 'Woof':\n        return props.isWoofFound ? true : false;\n\n      default:\n        return false;\n    }\n  }\n\n  return (\n    <ul>\n      {props.waldoMode ? (\n        <li onClick={handleClick} key={props.character}>\n          {isFound(props.character) ? (\n            <s>{props.character}</s>\n          ) : (\n            props.character\n          )}\n        </li>\n      ) : (\n        props.characters.map(character => {\n          return (\n            <li onClick={handleClick} key={character}>\n              {isFound(character) ? <s>{character}</s> : character}\n            </li>\n          );\n        })\n      )}\n    </ul>\n  );\n}\n","import styled from 'styled-components';\n\ninterface GameContainerProps {\n  isTimerOn: boolean;\n  waldoMode: boolean;\n}\n\ninterface PauseScreenProps {\n  isNotificationOpen: boolean;\n}\n\nexport const GameContainer = styled.main<GameContainerProps>`\n  display: flex;\n  user-select: none;\n  width: 100%;\n  height: auto;\n\n  figure {\n    text-align: center;\n  }\n\n  figcaption {\n    padding: 8px;\n  }\n\n  img {\n    --webkit-user-drag: none;\n    object-fit: contain;\n    width: 100%;\n    height: auto;\n    border: 7px solid\n      ${props =>\n        props.waldoMode\n          ? props.theme.colors.primary\n          : props.theme.colors.secondary};\n    border-radius: 7px;\n    ${props => (props.isTimerOn ? null : 'filter: blur(16px)')};\n    ${props => (props.isTimerOn ? null : '-webkit-filter: blur(16px)')};\n  }\n`;\n\nexport const PauseScreen = styled.p<PauseScreenProps>`\n  position: fixed;\n  color: white;\n  left: 50%;\n  top: ${props => (props.isNotificationOpen ? '15rem' : '10rem')};\n  transition: top 1s ease 0s;\n  transform: translateX(-50%);\n  padding: 8px;\n  background-color: ${props => props.theme.colors.secondary};\n  border-radius: ${props => props.theme.sizing.ul.borderRadius};\n  cursor: pointer;\n  z-index: 1;\n`;\n","import styled from 'styled-components';\nimport { Coords } from '../WaldoGame';\n\ninterface MenuProps {\n  menuCoords: Coords;\n  mouseCoords: Coords;\n}\n\nexport const ContextMenu = styled.div<MenuProps>`\n  ul {\n    display: flex;\n    flex-direction: column;\n    position: absolute;\n    top: ${props => props.menuCoords.y - 150 / 4}px;\n    left: ${props =>\n      props.mouseCoords.x > 750\n        ? props.menuCoords.x - 240 / 2 + 3\n        : props.menuCoords.x + 100 / 2 + 3}px;\n\n    color: ${props => props.theme.colors.primary};\n    background-color: white;\n    padding: ${props => props.theme.sizing.ul.padding};\n    border: 1px solid ${props => props.theme.colors.secondary};\n    border-radius: ${props => props.theme.sizing.ul.borderRadius};\n    gap: 3px;\n    list-style: none;\n    z-index: 1;\n\n    @media only screen and (max-width: 1200px) {\n      left: ${props =>\n        props.mouseCoords.x > 750\n          ? props.menuCoords.x - 215 / 2 + 3\n          : props.menuCoords.x + 75 / 2 + 3}px;\n      top: ${props => props.menuCoords.y - 125 / 4}px;\n    }\n\n    @media only screen and (max-width: 1000px) {\n      left: ${props =>\n        props.mouseCoords.x > 750\n          ? props.menuCoords.x - 200 / 2 + 3\n          : props.menuCoords.x + 60 / 2 + 3}px;\n      top: ${props => props.menuCoords.y - 100 / 4}px;\n    }\n\n    @media only screen and (max-width: 800px) {\n      left: ${props =>\n        props.mouseCoords.x > 750\n          ? props.menuCoords.x - 185 / 2 + 3\n          : props.menuCoords.x + 45 / 2 + 3}px;\n      top: ${props => props.menuCoords.y - 75 / 4}px;\n    }\n\n    @media only screen and (max-width: 600px) {\n      left: ${props =>\n        props.mouseCoords.x > 750\n          ? props.menuCoords.x - 175 / 2 + 3\n          : props.menuCoords.x + 35 / 2 + 3}px;\n      top: ${props => props.menuCoords.y - 60 / 4}px;\n    }\n\n    @media only screen and (max-width: 500px) {\n      left: ${props =>\n        props.mouseCoords.x > 750\n          ? props.menuCoords.x - 167 / 2 + 3\n          : props.menuCoords.x + 27 / 2 + 3}px;\n      top: ${props => props.menuCoords.y - 50 / 4}px;\n    }\n\n    @media only screen and (max-width: 420px) {\n      left: ${props =>\n        props.mouseCoords.x > 650\n          ? props.menuCoords.x - 162 / 2 + 3\n          : props.menuCoords.x + 22 / 2 + 3}px;\n      top: ${props => props.menuCoords.y - 45 / 4}px;\n    }\n\n    @media only screen and (max-width: 300px) {\n      left: ${props =>\n        props.mouseCoords.x > 600\n          ? props.menuCoords.x - 152 / 2 + 3\n          : props.menuCoords.x + 12 / 2 + 3}px;\n      top: ${props => props.menuCoords.y - 30 / 4}px;\n    }\n  }\n\n  li {\n    padding: 3px;\n  }\n\n  li:hover {\n    color: white;\n    cursor: pointer;\n    background-color: ${props => props.theme.colors.primary};\n    transition: opacity, background-color, color, 0.25s;\n    border-radius: 3px;\n  }\n`;\n\nexport const TargetingBox = styled.div<MenuProps>`\n  left: ${props => props.menuCoords.x - 100 / 2}px;\n  top: ${props => props.menuCoords.y - 100 / 2}px;\n  display: flex;\n  position: absolute;\n  height: 100px;\n  width: 100px;\n  border: 5px dashed ${props => props.theme.colors.targetingBox};\n  background-color: rgba(0, 0, 0, 0.3);\n  border-radius: 100%;\n  z-index: 1;\n\n  @media only screen and (max-width: 1200px) {\n    border: 4px dashed ${props => props.theme.colors.targetingBox};\n    left: ${props => props.menuCoords.x - 75 / 2}px;\n    top: ${props => props.menuCoords.y - 75 / 2}px;\n    height: 75px;\n    width: 75px;\n  }\n\n  @media only screen and (max-width: 1000px) {\n    left: ${props => props.menuCoords.x - 60 / 2}px;\n    top: ${props => props.menuCoords.y - 60 / 2}px;\n    height: 60px;\n    width: 60px;\n  }\n\n  @media only screen and (max-width: 800px) {\n    border: 3px dashed ${props => props.theme.colors.targetingBox};\n    left: ${props => props.menuCoords.x - 45 / 2}px;\n    top: ${props => props.menuCoords.y - 45 / 2}px;\n    height: 45px;\n    width: 45px;\n  }\n\n  @media only screen and (max-width: 600px) {\n    left: ${props => props.menuCoords.x - 35 / 2}px;\n    top: ${props => props.menuCoords.y - 35 / 2}px;\n    height: 35px;\n    width: 35px;\n  }\n\n  @media only screen and (max-width: 500px) {\n    border: 2px dashed ${props => props.theme.colors.targetingBox};\n    left: ${props => props.menuCoords.x - 30 / 2}px;\n    top: ${props => props.menuCoords.y - 30 / 2}px;\n    height: 30px;\n    width: 30px;\n  }\n\n  @media only screen and (max-width: 420px) {\n    left: ${props => props.menuCoords.x - 25 / 2}px;\n    top: ${props => props.menuCoords.y - 25 / 2}px;\n    height: 25px;\n    width: 25px;\n  }\n\n  @media only screen and (max-width: 300px) {\n    border: 1px dashed ${props => props.theme.colors.targetingBox};\n    left: ${props => props.menuCoords.x - 15 / 2}px;\n    top: ${props => props.menuCoords.y - 15 / 2}px;\n    height: 15px;\n    width: 15px;\n  }\n`;\n","import { useState, useEffect, useRef } from 'react';\nimport { useHistory } from 'react-router';\nimport { collection, getDocs } from 'firebase/firestore';\n\nimport Notification from './Notification';\nimport SelectionMenu from './SelectionMenu';\n\nimport { GameContainer, PauseScreen } from './styles/GameContainer.styled';\nimport { ContextMenu, TargetingBox } from './styles/ContextMenu.styled';\nimport { db } from '../index';\n\nexport interface Coords {\n  x: number;\n  y: number;\n}\n\nexport interface NotificationState {\n  isNotificationOpen: boolean;\n  character: string;\n  isCharacterFound: boolean;\n  timer: NodeJS.Timeout;\n}\n\ninterface GameProps {\n  isGameOver: boolean;\n  setIsGameOver: React.Dispatch<React.SetStateAction<boolean>>;\n  isGameOn: boolean;\n  setIsGameOn: React.Dispatch<React.SetStateAction<boolean>>;\n  setTime: React.Dispatch<React.SetStateAction<number>>;\n  isTimerOn: boolean;\n  setIsTimerOn: React.Dispatch<React.SetStateAction<boolean>>;\n  img: string;\n  level: string;\n  waldoMode: boolean;\n}\n\nexport default function WaldoGame(props: GameProps) {\n  const [mouseCoords, setMouseCoords] = useState({ x: 0, y: 0 });\n  const [menuCoords, setMenuCoords] = useState({ x: 0, y: 0 });\n  const [isContextOpen, setIsContextOpen] = useState(false);\n  const [isOdlawFound, setIsOdlawFound] = useState(false);\n  const [isWaldoFound, setIsWaldoFound] = useState(false);\n  const [isWendaFound, setIsWendaFound] = useState(false);\n  const [isWizardFound, setIsWizardFound] = useState(false);\n  const [isWoofFound, setIsWoofFound] = useState(false);\n  const [character, setCharacter] = useState('');\n  const [characters, setCharacters] = useState<string[]>([]);\n  const [notificationData, setNotificationData] = useState<NotificationState>({\n    isNotificationOpen: false,\n    character: '',\n    isCharacterFound: false,\n    timer: setTimeout(() => {}, 0),\n  });\n\n  const history = useHistory();\n  const firstRender = useRef(true);\n\n  useEffect(() => {\n    if (firstRender.current) {\n      firstRender.current = false;\n      props.setIsGameOn(true);\n      return;\n    }\n\n    let gameOver: boolean[] = [];\n\n    for (let character in characters) {\n      switch (characters[character]) {\n        case 'Odlaw':\n          gameOver.push(isOdlawFound);\n          break;\n\n        case 'Waldo':\n          gameOver.push(isWaldoFound);\n          break;\n\n        case 'Wenda':\n          gameOver.push(isWendaFound);\n          break;\n\n        case 'Wizard':\n          gameOver.push(isWizardFound);\n          break;\n      }\n    }\n\n    if (props.waldoMode) {\n      if (isWaldoFound) {\n        props.setIsTimerOn(false);\n        props.setIsGameOn(false);\n        return props.setIsGameOver(true);\n      }\n    } else {\n      if (gameOver.includes(false)) {\n        return;\n      } else {\n        props.setIsTimerOn(false);\n        props.setIsGameOn(false);\n        return props.setIsGameOver(true);\n      }\n    }\n  }, [isOdlawFound, isWaldoFound, isWendaFound, isWizardFound]);\n\n  useEffect((): void => {\n    resetCharacters();\n    getCharacters();\n    props.setTime(0);\n  }, [history.location]);\n\n  function resetCharacters() {\n    setIsOdlawFound(false);\n    setIsWaldoFound(false);\n    setIsWendaFound(false);\n    setIsWizardFound(false);\n    setIsWoofFound(false);\n  }\n\n  async function getCharacters() {\n    const characterList = await getDocs(\n      collection(db, 'Levels', props.level, 'Coordinates')\n    );\n    const characters: string[] = [];\n    characterList.forEach(character => {\n      characters.push(character.id);\n    });\n\n    props.waldoMode ? setCharacter('Waldo') : setCharacters(characters);\n  }\n\n  function getMouseCoords(e: any) {\n    const { width, height }: { width: number; height: number } =\n      e.target.getBoundingClientRect();\n    const { offsetX, offsetY }: { offsetX: number; offsetY: number } =\n      e.nativeEvent;\n\n    const mouseX = Math.round((offsetX / width) * 1000);\n    const mouseY = Math.round((offsetY / height) * 1000);\n    const { pageX: menuX, pageY: menuY }: { pageX: number; pageY: number } = e;\n\n    const menuCoords: Coords = {\n      x: menuX,\n      y: menuY,\n    };\n\n    const mouseCoords: Coords = {\n      x: mouseX,\n      y: mouseY,\n    };\n\n    setMouseCoords(mouseCoords);\n    setMenuCoords(menuCoords);\n  }\n\n  async function handleClick(e: any) {\n    getMouseCoords(e);\n    props.isTimerOn\n      ? setIsContextOpen(!isContextOpen)\n      : props.setIsTimerOn(!props.isTimerOn);\n  }\n\n  return (\n    <GameContainer isTimerOn={props.isTimerOn} waldoMode={props.waldoMode}>\n      {notificationData.isNotificationOpen ? (\n        <Notification notificationData={notificationData} />\n      ) : null}\n      {props.isTimerOn ? null : (\n        <PauseScreen\n          onClick={() => props.setIsTimerOn(!props.isTimerOn)}\n          isNotificationOpen={notificationData.isNotificationOpen}\n        >\n          Game is paused\n        </PauseScreen>\n      )}\n      {isContextOpen ? (\n        <ContextMenu menuCoords={menuCoords} mouseCoords={mouseCoords}>\n          <TargetingBox\n            onClick={handleClick}\n            menuCoords={menuCoords}\n            mouseCoords={mouseCoords}\n          />\n          <SelectionMenu\n            isContextMenuOpen={isContextOpen}\n            setIsContextMenuOpen={setIsContextOpen}\n            notificationData={notificationData}\n            setNotificationData={setNotificationData}\n            img={props.img}\n            level={props.level}\n            character={character}\n            characters={characters}\n            mouseCoords={mouseCoords}\n            isOdlawFound={isOdlawFound}\n            setIsOdlawFound={setIsOdlawFound}\n            isWaldoFound={isWaldoFound}\n            setIsWaldoFound={setIsWaldoFound}\n            isWendaFound={isWendaFound}\n            setIsWendaFound={setIsWendaFound}\n            isWizardFound={isWizardFound}\n            setIsWizardFound={setIsWizardFound}\n            isWoofFound={isWoofFound}\n            setIsWoofFound={setIsWoofFound}\n            waldoMode={props.waldoMode}\n          />\n        </ContextMenu>\n      ) : null}\n      <figure>\n        <figcaption>\n          <h3>{props.level}</h3>\n        </figcaption>\n        <img\n          onClick={handleClick}\n          src={props.img}\n          draggable='false'\n          alt=\"Where's Waldo?\"\n        />\n      </figure>\n    </GameContainer>\n  );\n}\n","import styled from 'styled-components';\n\nexport const MainContainer = styled.main`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 16px;\n  background-color: white;\n  gap: 64px;\n  width: 100%;\n  height: auto;\n  text-align: center;\n\n  figure {\n    height: clamp(15vh, 35vh, 35vh);\n    width: auto;\n  }\n\n  figcaption {\n    padding: 16px 0 0 0;\n  }\n\n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: contain;\n  }\n\n  button {\n    cursor: pointer;\n    color: white;\n    background-color: ${props => props.theme.colors.primary};\n    padding: 5px;\n    border-radius: 7px;\n    border: none;\n    font: inherit;\n  }\n\n  fieldset {\n    display: flex;\n    flex-direction: column;\n    padding: 16px;\n    gap: 8px;\n  }\n\n  form {\n    display: flex;\n    flex-direction: column;\n    gap: 8px;\n  }\n\n  #submitButton {\n    cursor: pointer;\n    color: white;\n    background-color: ${props => props.theme.colors.primary};\n    padding: 5px;\n    border-radius: 7px;\n    border: none;\n    font: inherit;\n  }\n\n  label {\n    text-align: left;\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/WaldoFound.80f74ad0.png\";","import { useRef } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { collection, addDoc } from 'firebase/firestore';\n\nimport { MainContainer } from './styles/GameOverContainer.styled';\n\nimport WaldoFound from '../assets/WaldoFound.png';\n\nimport { db } from '../index';\n\ninterface GameOverProps {\n  isGameOver: boolean;\n  setIsGameOver: React.Dispatch<React.SetStateAction<boolean>>;\n  time: number;\n  level: string;\n  waldoMode: boolean;\n}\n\nexport default function GameOver(props: GameOverProps) {\n  const history = useHistory();\n\n  const usernameRef = useRef<HTMLInputElement>(null);\n\n  function handleClick() {\n    props.setIsGameOver(false);\n  }\n\n  async function handleSubmit(e: React.FormEvent) {\n    e.preventDefault();\n    history.push({\n      pathname: '/high-scores',\n      state: {\n        level: props.level,\n      },\n    });\n    const username = usernameRef.current!.value;\n\n    if (props.waldoMode) {\n      try {\n        await addDoc(collection(db, 'Levels', props.level, 'High Scores'), {\n          username: username,\n          time: props.time,\n          waldoMode: true,\n        });\n      } catch (e) {\n        console.error('Error adding document: ', e);\n      }\n    } else {\n      try {\n        await addDoc(collection(db, 'Levels', props.level, 'High Scores'), {\n          username: username,\n          time: props.time,\n        });\n      } catch (e) {\n        console.error('Error adding document: ', e);\n      }\n    }\n  }\n\n  return (\n    <MainContainer>\n      <figure>\n        <img src={WaldoFound} alt='You found Waldo!' />\n        <figcaption>You found Waldo!</figcaption>\n      </figure>\n\n      <form onSubmit={handleSubmit}>\n        <h3>\n          You completed <b>{props.level}</b> in{' '}\n          <b>{props.time / 1000} seconds!</b>\n        </h3>\n\n        <fieldset>\n          <legend>Enter your name to save your score!</legend>\n\n          <label htmlFor='username'>Username</label>\n          <input required ref={usernameRef} type='text' id='username'></input>\n        </fieldset>\n\n        <input id='submitButton' type='submit' value='Submit'></input>\n      </form>\n\n      <button onClick={handleClick}>Play Again</button>\n    </MainContainer>\n  );\n}\n","import styled from 'styled-components';\n\ninterface SwitchProps {\n  waldoMode: boolean;\n}\n\nexport const MainContainer = styled.main`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 16px;\n  gap: 16px;\n  width: 100%;\n  height: auto;\n  text-align: center;\n\n  figure {\n    width: auto;\n    height: 100%;\n    padding: 8px;\n  }\n\n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: contain;\n  }\n\n  #scoresImg {\n    img {\n      max-height: 35vh;\n    }\n  }\n\n  table,\n  th,\n  td {\n    border: 2px solid black;\n    border-collapse: collapse;\n  }\n\n  table tbody tr:nth-child(1) {\n    background-color: #ffdf4f;\n  }\n\n  table tbody tr:nth-child(2) {\n    background-color: #bbbcbd;\n  }\n\n  table tbody tr:nth-child(3) {\n    background-color: #cd7f32;\n  }\n\n  table {\n    width: 100%;\n\n    caption,\n    th,\n    td {\n      padding: 16px;\n    }\n\n    .username {\n      width: 80%;\n    }\n\n    .time {\n      width: 20%;\n    }\n  }\n`;\n\nexport const HighScoresContainer = styled.section`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: auto;\n  gap: 16px;\n\n  figure {\n    height: 100%;\n    padding: 0;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 8px;\n    height: auto;\n    text-align: center;\n    overflow-x: none;\n  }\n\n  img {\n    width: auto;\n    height: auto;\n  }\n\n  figcaption {\n    color: ${props => props.theme.colors.secondary};\n  }\n`;\n\nexport const HighScoresContainerRow = styled(HighScoresContainer)<SwitchProps>`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  justify-content: space-around;\n  padding: 0 3vw;\n  height: auto;\n\n  figure {\n    border: 3px solid\n      ${props =>\n        props.waldoMode\n          ? props.theme.colors.primary\n          : props.theme.colors.secondary};\n    border-radius: 8px;\n    padding: 16px;\n    cursor: pointer;\n  }\n\n  img {\n    width: 100%;\n    height: 30vh;\n    object-fit: cover;\n    object-position: right bottom;\n    border-radius: 5px;\n  }\n\n  @media only screen and (max-width: 1000px) {\n    img {\n      height: 20vh;\n    }\n  }\n\n  @media only screen and (max-width: 669px) {\n    padding: 0;\n    figure {\n      padding: 8px;\n    }\n    img {\n      height: 15vh;\n    }\n  }\n  @media only screen and (max-width: 600px) {\n    grid-template-columns: 1fr 1fr;\n  }\n`;\n\nexport const DifficultyGrid = styled.section<SwitchProps>`\n  display: flex;\n  position: relative;\n  justify-content: center;\n  flex-direction: column;\n  width: 100%;\n  height: auto;\n\n  a {\n    color: white;\n    position: absolute;\n    margin: 0 0 0 3vw;\n\n    button {\n      cursor: pointer;\n      color: white;\n      background-color: ${props =>\n        props.waldoMode\n          ? props.theme.colors.primary\n          : props.theme.colors.secondary};\n      padding: 5px;\n      border-radius: 7px;\n      border: inherit;\n      font: inherit;\n    }\n\n    @media only screen and (max-width: 669px) {\n      position: relative;\n      align-self: center;\n      order: 2;\n      margin: 8px 0 0 0;\n    }\n  }\n`;\n\nexport const SwitchContainer = styled.div<SwitchProps>`\n  position: absolute;\n  align-self: flex-end;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  margin: 0 3vw 0 0;\n  user-select: none;\n  @media only screen and (max-width: 669px) {\n    position: relative;\n    align-self: center;\n    margin: 8px 0 0 0;\n  }\n\n  label {\n    width: fit-content;\n    overflow: hidden;\n    white-space: nowrap;\n  }\n\n  /* The switch - the box around the slider */\n  .switch {\n    position: relative;\n    display: inline-block;\n    width: 60px;\n    height: 34px;\n    flex-shrink: 0;\n  }\n\n  /* Hide default HTML checkbox */\n  input {\n    opacity: 0;\n    width: 0;\n    height: 0;\n  }\n\n  /* The slider */\n  span {\n    position: absolute;\n    cursor: pointer;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: ${props =>\n      props.waldoMode\n        ? props.theme.colors.primary\n        : props.theme.colors.secondary};\n    -webkit-transition: 0.4s;\n    transition: 0.4s;\n    border-radius: 34px;\n  }\n\n  span:before {\n    position: absolute;\n    content: '';\n    height: 26px;\n    min-width: 26px;\n    left: 4px;\n    bottom: 4px;\n    background-color: white;\n    -webkit-transition: 0.4s;\n    transition: 0.4s;\n    border-radius: 50%;\n  }\n\n  input:focus + span {\n    box-shadow: 0 0 1px ${props => props.theme.colors.secondary};\n  }\n\n  input:checked + span:before {\n    -webkit-transform: translateX(26px);\n    -ms-transform: translateX(26px);\n    transform: translateX(26px);\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/CharacterBanner.25ed0c72.png\";","import { useState, useEffect, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getDocs, collection, QueryDocumentSnapshot } from 'firebase/firestore';\nimport { db } from '../index';\nimport { DocumentData } from '@firebase/firestore-types';\n\nimport { Level } from '../App';\n\nimport {\n  MainContainer,\n  HighScoresContainer,\n  HighScoresContainerRow,\n  DifficultyGrid,\n  SwitchContainer,\n} from './styles/HighScoresContainer.styled';\n\nimport CharacterBanner from '../assets/CharacterBanner.png';\n\nimport { useLocation } from 'react-router';\n\ninterface LocationState {\n  state: {\n    level: string;\n  };\n}\n\ninterface HighScoreProps {\n  level: string | undefined;\n  setLevel: React.Dispatch<React.SetStateAction<string | undefined>>;\n  levelList: Level[];\n  waldoMode: boolean;\n  setWaldoMode: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nexport default function HighScores(props: HighScoreProps) {\n  const [levelScores, setLevelScores] = useState<DocumentData[]>([]);\n  const [levelPath, setLevelPath] = useState('/high-scores');\n\n  const location: LocationState = useLocation();\n\n  const leaderboard = useRef<HTMLTableElement>(null);\n  const checkRef = useRef<HTMLInputElement>(null);\n  const firstRender = useRef(true);\n\n  useEffect(() => {\n    if (firstRender.current) {\n      firstRender.current = false;\n      return;\n    } else {\n      const nav = document.getElementById('nav');\n      let yOffset = 60; // Default value\n      if (nav) {\n        const navHeight = nav.getBoundingClientRect().height;\n        yOffset = navHeight;\n      }\n      if (leaderboard.current) {\n        const y =\n          leaderboard.current.getBoundingClientRect().top +\n          window.pageYOffset -\n          yOffset;\n        window.scrollTo({ top: y, behavior: 'smooth' });\n      }\n    }\n  }, [levelScores]);\n\n  useEffect(() => {\n    setCheckbox();\n    try {\n      const newLevel = location.state.level;\n      props.setLevel(newLevel);\n    } catch {\n      void 0;\n    }\n  }, []);\n\n  useEffect(() => {\n    getPath();\n  }, [props.level]);\n\n  useEffect(() => {\n    props.level ? getLevelScores(props.level) : void 0;\n  }, [props.level, props.waldoMode]);\n\n  function handleClick(newLevel: string): void {\n    props.setLevel(newLevel);\n  }\n\n  async function getLevelScores(newLevel: string) {\n    const querySnapshot = await getDocs(\n      collection(db, 'Levels', newLevel, 'High Scores')\n    );\n    const levelScores: QueryDocumentSnapshot<DocumentData>[] = [];\n    querySnapshot.forEach(score => {\n      const scoreData = score.data();\n      if (newLevel === 'Ski Resort' || newLevel === 'Jurassic') {\n        levelScores.push(score);\n      } else if (props.waldoMode) {\n        if ('waldoMode' in scoreData) {\n          levelScores.push(score);\n        }\n      } else {\n        if (!('waldoMode' in scoreData)) {\n          levelScores.push(score);\n        }\n      }\n    });\n    const leaderboard = levelScores.map(score => score.data());\n    const newLevelScores = leaderboard.sort((a, b) => {\n      return a.time - b.time;\n    });\n\n    setLevelScores(newLevelScores);\n  }\n\n  function difficultyToggle() {\n    props.setWaldoMode(!props.waldoMode);\n  }\n\n  function setCheckbox() {\n    if (checkRef.current) {\n      if (props.waldoMode) {\n        checkRef.current.checked = false;\n      } else {\n        checkRef.current.checked = true;\n      }\n    }\n  }\n\n  function giveMedals(index: number) {\n    switch (index) {\n      case 0:\n        return <span>&#129351;</span>;\n      case 1:\n        return <span>&#129352;</span>;\n      case 2:\n        return <span>&#129353;</span>;\n      default:\n        return `${index + 1}.`;\n    }\n  }\n\n  function getPath() {\n    props.levelList.map(level => {\n      if (props.level === level.name) {\n        setLevelPath(level.path);\n      }\n    });\n  }\n\n  return (\n    <MainContainer>\n      <figure id='scoresImg'>\n        <img src={CharacterBanner} alt='Characters' />\n      </figure>\n      <h2>High Scores</h2>\n\n      <HighScoresContainer>\n        <h3>Choose a level!</h3>\n\n        <HighScoresContainerRow waldoMode={props.waldoMode}>\n          {props.levelList.map((level, index) => {\n            return (\n              <figure onClick={() => handleClick(level.name)} key={index}>\n                <figcaption>\n                  <b>{level.name}</b>\n                </figcaption>\n                <img src={level.img} alt={level.name} />\n              </figure>\n            );\n          })}\n        </HighScoresContainerRow>\n      </HighScoresContainer>\n\n      <table ref={leaderboard} id='leaderboard'>\n        <caption>\n          {props.level ? (\n            <DifficultyGrid waldoMode={props.waldoMode}>\n              <Link to={levelPath}>\n                <button>Play Level</button>\n              </Link>\n              <h3>{props.level}</h3>\n\n              <SwitchContainer waldoMode={props.waldoMode}>\n                <label htmlFor='checkbox'>\n                  {props.waldoMode ? 'Waldo' : 'Challenge'} Mode\n                </label>\n                <label className='switch'>\n                  <input\n                    ref={checkRef}\n                    onClick={difficultyToggle}\n                    type='checkbox'\n                    id='checkbox'\n                  />\n                  <span></span>\n                </label>\n              </SwitchContainer>\n            </DifficultyGrid>\n          ) : (\n            <DifficultyGrid waldoMode={props.waldoMode}>\n              <h3>Choose a level first!</h3>\n\n              <SwitchContainer waldoMode={props.waldoMode}>\n                <label htmlFor='checkbox'>\n                  {props.waldoMode ? 'Waldo' : 'Challenge'} Mode\n                </label>\n                <label className='switch'>\n                  <input\n                    ref={checkRef}\n                    onClick={difficultyToggle}\n                    type='checkbox'\n                    id='checkbox'\n                  />\n                  <span></span>\n                </label>\n              </SwitchContainer>\n            </DifficultyGrid>\n          )}\n        </caption>\n        <thead>\n          <tr>\n            <th className='rank'>Rank</th>\n            <th className='username'>Username</th>\n            <th className='time'>Time</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {levelScores.map((score, index) => {\n            return (\n              <tr key={index}>\n                <td>{giveMedals(index)}</td>\n                <td>{score.username}</td>\n                <td>\n                  <span>\n                    {Math.floor((score.time / 60000) % 60)\n                      .toString()\n                      .slice(-2)}\n                    :\n                  </span>\n                  <span>\n                    {('0' + Math.floor((score.time / 1000) % 60)).slice(-2)}\n                  </span>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </MainContainer>\n  );\n}\n","export default function PageNotFound() {\n  return <div>Error 404 - Page Not Found</div>;\n}\n","import { createGlobalStyle } from 'styled-components';\nimport { ThemeType } from './Theme';\n\nexport const GlobalStyles = createGlobalStyle<{ theme: ThemeType }>`\n\n    html {\n        scroll-behavior: smooth;\n    }\n\n    * {\n        margin: 0;\n        padding: 0;\n        box-sizing: border-box;\n    }\n\n    body {\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n            'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n            sans-serif;\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n        width: 100%;\n        height: auto;\n    }\n\n    code {\n        font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;\n    }\n`;\n","export const Theme = {\n  colors: {\n    primary: '#2d9edf', // Waldo blue\n    secondary: '#ee2223', // Waldo red\n    targetingBox: '#39ff14', // Neon green\n  },\n  sizing: {\n    ul: {\n      padding: '3px 5px',\n      borderRadius: '7px',\n    },\n  },\n};\n\nexport type ThemeType = typeof Theme;\n","import { useState, useEffect } from 'react';\nimport { HashRouter, Switch, Route } from 'react-router-dom';\nimport { ThemeProvider } from 'styled-components';\n\nimport NavBar from './components/NavBar';\nimport HomePage from './components/HomePage';\nimport WaldoGame from './components/WaldoGame';\nimport GameOver from './components/GameOver';\nimport HighScores from './components/HighScores';\nimport PageNotFound from './components/PageNotFound';\n\nimport { GlobalStyles } from './components/styles/Global';\nimport { Theme } from './components/styles/Theme';\n\nimport { collection, query, getDocs } from 'firebase/firestore';\nimport { db } from './index';\n\nexport interface Level {\n  img: string;\n  name: string;\n  path: string;\n}\n\nexport default function App() {\n  const [isGameOn, setIsGameOn] = useState(false);\n  const [isGameOver, setIsGameOver] = useState(false);\n  const [time, setTime] = useState(0);\n  const [isTimerOn, setIsTimerOn] = useState(false);\n  const [level, setLevel] = useState<string | undefined>(undefined);\n  const [waldoMode, setWaldoMode] = useState(true);\n  const [levelList, setLevelList] = useState<Level[]>([]);\n\n  useEffect(() => {\n    getLevels();\n  }, []);\n\n  async function getLevels() {\n    const levelList: any[] = [];\n    const q = query(collection(db, 'Levels'));\n    const querySnapshot = await getDocs(q);\n    querySnapshot.forEach(doc => {\n      const level = doc.data();\n      levelList.push(level);\n    });\n    setLevelList(levelList);\n  }\n\n  return (\n    <HashRouter>\n      <ThemeProvider theme={Theme}>\n        <GlobalStyles />\n\n        <NavBar\n          setIsGameOver={setIsGameOver}\n          isGameOn={isGameOn}\n          setIsGameOn={setIsGameOn}\n          time={time}\n          setTime={setTime}\n          isTimerOn={isTimerOn}\n          setIsTimerOn={setIsTimerOn}\n          isGameOver={isGameOver}\n          setLevel={setLevel}\n          levelList={levelList}\n        />\n\n        <Switch>\n          <Route exact path='/'>\n            <HomePage\n              waldoMode={waldoMode}\n              setWaldoMode={setWaldoMode}\n              levelList={levelList}\n            />\n          </Route>\n\n          {levelList.map((level, index) => {\n            return (\n              <Route exact path={level.path} key={index}>\n                {isGameOver ? (\n                  <GameOver\n                    isGameOver={isGameOver}\n                    setIsGameOver={setIsGameOver}\n                    time={time}\n                    level={level.name}\n                    waldoMode={waldoMode}\n                  />\n                ) : (\n                  <WaldoGame\n                    isGameOver={isGameOver}\n                    setIsGameOver={setIsGameOver}\n                    isGameOn={isGameOn}\n                    setIsGameOn={setIsGameOn}\n                    setTime={setTime}\n                    isTimerOn={isTimerOn}\n                    setIsTimerOn={setIsTimerOn}\n                    img={level.img}\n                    level={level.name}\n                    waldoMode={waldoMode}\n                  />\n                )}\n              </Route>\n            );\n          })}\n\n          <Route exact path='/high-scores'>\n            <HighScores\n              level={level}\n              setLevel={setLevel}\n              levelList={levelList}\n              waldoMode={waldoMode}\n              setWaldoMode={setWaldoMode}\n            />\n          </Route>\n\n          <Route component={PageNotFound} />\n        </Switch>\n      </ThemeProvider>\n    </HashRouter>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { initializeApp } from 'firebase/app';\nimport { getFirestore } from 'firebase/firestore';\nimport App from './App';\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyA-_xHp4FOaCpr4mQkqyLxpg_YW3JhmPfQ',\n\n  authDomain: 'wheres-waldo-78b7d.firebaseapp.com',\n\n  projectId: 'wheres-waldo-78b7d',\n\n  storageBucket: 'wheres-waldo-78b7d.appspot.com',\n\n  messagingSenderId: '91226203075',\n\n  appId: '1:91226203075:web:01c1fbfc3ca1bf8df11376',\n};\n\nconst app = initializeApp(firebaseConfig);\nexport const db = getFirestore(app);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}