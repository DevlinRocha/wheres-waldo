{"version":3,"sources":["components/Timer.tsx","components/styles/DropDown.styled.ts","components/LevelSelect.tsx","components/styles/Nav.styled.ts","components/NavBar.tsx","components/styles/HomeContainer.styled.ts","assets/Where'sWaldo.png","assets/levels/GobblingGluttons.jpg","assets/levels/SkiResort.png","assets/levels/ToysToysToys.jpg","assets/characters/Odlaw.png","assets/characters/Waldo.png","assets/characters/Wenda.png","assets/characters/WizardWhitebeard.png","assets/characters/Woof.png","components/HomePage.tsx","components/styles/Banner.styled.ts","components/Notification.tsx","components/SelectionMenu.tsx","components/styles/GameContainer.styled.ts","components/styles/ContextMenu.styled.ts","components/WaldoGame.tsx","components/styles/GameOverContainer.styled.ts","assets/WaldoFound.png","components/GameOver.tsx","components/styles/HighScoresContainer.styled.ts","assets/CharacterBanner.png","components/HighScores.tsx","components/PageNotFound.tsx","components/styles/Global.ts","components/styles/Theme.ts","App.tsx","index.tsx"],"names":["Timer","props","useEffect","isGameOver","setIsTimerOn","interval","isTimerOn","setInterval","setTime","prevTime","clearInterval","onClick","Math","floor","time","toString","slice","DropDown","styled","aside","isDropDownOpen","theme","sizing","ul","padding","colors","secondary","borderRadius","primary","LevelSelect","useState","setIsDropDownOpen","switchLevel","setIsGameOver","id","exact","to","Nav","nav","NavBar","handleClick","setIsGameOn","setLevel","undefined","isGameOn","MainContainer","main","waldoMode","HomeContainer","section","LevelContainer","CharacterContainer","DifficultyGrid","SwitchContainer","div","HomePage","src","WheresWaldo","alt","htmlFor","className","setWaldoMode","type","GobblingGluttons","SkiResort","ToysToysToys","Waldo","Wenda","Wizard","Odlaw","Woof","Banner","notificationData","isCharacterFound","Notification","character","SelectionMenu","getCoords","selection","a","docRef","doc","db","level","getDoc","docSnap","exists","waldoCoords","data","console","error","e","target","textContent","setIsContextMenuOpen","isContextMenuOpen","abs","mouseCoords","x","y","clearTimeout","timer","setNotificationData","isNotificationOpen","setTimeout","setIsOdlawFound","setIsWaldoFound","setIsWendaFound","setIsWizardFound","setIsWoofFound","isFound","isOdlawFound","isWaldoFound","isWendaFound","isWizardFound","isWoofFound","characters","map","GameContainer","PauseScreen","p","targetSize","ContextMenu","menuCoords","TargetingBox","targetingBox","WaldoGame","setMouseCoords","setMenuCoords","isContextOpen","setIsContextOpen","setCharacter","setCharacters","history","useHistory","firstRender","useRef","getDocs","collection","characterList","forEach","push","getMouseCoords","getBoundingClientRect","width","height","nativeEvent","offsetX","offsetY","mouseX","round","mouseY","pageX","pageY","current","gameOver","includes","getCharacters","location","img","draggable","GameOver","usernameRef","preventDefault","pathname","state","username","value","addDoc","WaldoFound","onSubmit","ref","HighScoresContainer","HighScoresContainerRow","HighScores","levelScores","setLevelScores","useLocation","leaderboard","newLevel","querySnapshot","score","scoreData","newLevelScores","sort","b","difficultyToggle","scrollIntoView","getLevelScores","CharacterBanner","index","PageNotFound","GlobalStyles","createGlobalStyle","Theme","App","path","component","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","getFirestore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.32e3f1fc.chunk.js","sourcesContent":["import { useEffect } from 'react';\n\ninterface TimerProps {\n  time: number;\n  setTime: React.Dispatch<React.SetStateAction<number>>;\n  isGameOver: boolean;\n  isTimerOn: boolean;\n  setIsTimerOn: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nexport default function Timer(props: TimerProps) {\n  useEffect(() => {\n    if (props.isGameOver === false) {\n      props.setIsTimerOn(true);\n    } else {\n      props.setIsTimerOn(false);\n    }\n  }, [props.isGameOver]);\n\n  useEffect(() => {\n    let interval: NodeJS.Timeout;\n\n    if (props.isTimerOn) {\n      interval = setInterval(() => {\n        props.setTime(prevTime => prevTime + 10);\n      }, 10);\n    }\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [props.isTimerOn]);\n\n  function handleClick() {\n    props.setIsTimerOn(!props.isTimerOn);\n  }\n\n  return (\n    <time onClick={handleClick}>\n      <span>\n        {Math.floor((props.time / 60000) % 60)\n          .toString()\n          .slice(-2)}\n        :\n      </span>\n      <span>{('0' + Math.floor((props.time / 1000) % 60)).slice(-2)}</span>\n    </time>\n  );\n}\n","import styled from 'styled-components';\n\ninterface DropDownProps {\n  isDropDownOpen: boolean;\n}\n\nexport const DropDown = styled.aside<DropDownProps>`\n  justify-self: end;\n  transition: all 3s;\n\n  #levelList {\n    display: ${props =>\n      props.isDropDownOpen ? 'flex' : 'none'}; // 'flex' or 'none'\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    text-align: center;\n    position: absolute;\n    background: white;\n    width: auto;\n    height: ${props => (props.isDropDownOpen ? 'auto' : '0px')};\n    margin: 3px 16px 0 0;\n    padding: ${props => props.theme.sizing.ul.padding};\n    border: 1px solid ${props => props.theme.colors.secondary};\n    border-radius: ${props => props.theme.sizing.ul.borderRadius};\n    transition: all 0.75s;\n    z-index: 1;\n    list-style-type: none;\n  }\n\n  a {\n    padding: 8px;\n    margin: 0;\n    opacity: ${props => (props.isDropDownOpen ? 1 : 0)};\n    display: ${props =>\n      props.isDropDownOpen\n        ? 'inline-block'\n        : 'none'}; // 'inline-block' or 'none'\n    transition: opacity, background-color, color, 0.25s;\n    width: 100%;\n    height: 100%;\n    color: ${props => props.theme.colors.primary};\n  }\n\n  a:hover {\n    background-color: ${props => props.theme.colors.primary};\n    border-radius: ${props => props.theme.sizing.ul.borderRadius};\n    color: white;\n  }\n\n  .active {\n    color: ${props => props.theme.colors.secondary};\n  }\n`;\n","import { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport { DropDown } from './styles/DropDown.styled';\n\ninterface LevelSelectProps {\n  setIsGameOver: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nexport default function LevelSelect(props: LevelSelectProps) {\n  const [isDropDownOpen, setIsDropDownOpen] = useState(false);\n\n  function handleClick() {\n    setIsDropDownOpen(!isDropDownOpen);\n  }\n\n  function switchLevel() {\n    props.setIsGameOver(false);\n    setIsDropDownOpen(false);\n  }\n\n  return (\n    <DropDown isDropDownOpen={isDropDownOpen}>\n      <button onClick={handleClick}>Level Select</button>\n      <ul id='levelList'>\n        <NavLink onClick={switchLevel} exact to='/gobbling-gluttons'>\n          <li>Gobbling Gluttons</li>\n        </NavLink>\n        <NavLink onClick={switchLevel} exact to='/ski-resort'>\n          <li>Ski Resort</li>\n        </NavLink>\n        <NavLink onClick={switchLevel} exact to='/toys-toys-toys'>\n          <li>Toys! Toys! Toys!</li>\n        </NavLink>\n      </ul>\n    </DropDown>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Nav = styled.nav`\n  position: sticky;\n  top: 0;\n  display: grid;\n  grid-auto-flow: column;\n  grid-auto-columns: 1fr auto 1fr;\n  align-items: center;\n  padding: 16px;\n  background-color: white;\n  gap: 8px;\n  z-index: 1;\n\n  #first {\n    color: ${props => props.theme.colors.primary};\n  }\n\n  #second {\n    color: ${props => props.theme.colors.secondary};\n  }\n\n  time {\n    padding: 8px;\n    background-color: ${props => props.theme.colors.secondary};\n    color: white;\n    border-radius: 7px;\n    cursor: pointer;\n  }\n\n  section {\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-end;\n    gap: 8px;\n  }\n\n  button {\n    cursor: pointer;\n    color: white;\n    background-color: ${props => props.theme.colors.primary};\n    padding: 5px;\n    border-radius: 7px;\n    border: inherit;\n    font: inherit;\n\n    a {\n      color: white;\n    }\n  }\n\n  a {\n    text-decoration: none;\n  }\n\n  ul {\n    display: flex;\n    flex-direction: rows;\n    gap: 10px;\n    list-style: none;\n  }\n`;\n","import { Link } from 'react-router-dom';\n\nimport Timer from './Timer';\nimport LevelSelect from './LevelSelect';\n\nimport { Nav } from './styles/Nav.styled';\n\ninterface NavProps {\n  setIsGameOver: React.Dispatch<React.SetStateAction<boolean>>;\n  isGameOn: boolean;\n  setIsGameOn: React.Dispatch<React.SetStateAction<boolean>>;\n  time: number;\n  setTime: React.Dispatch<React.SetStateAction<number>>;\n  isTimerOn: boolean;\n  setIsTimerOn: React.Dispatch<React.SetStateAction<boolean>>;\n  isGameOver: boolean;\n  setLevel: React.Dispatch<React.SetStateAction<string | undefined>>;\n}\n\nexport default function NavBar(props: NavProps) {\n  function handleClick() {\n    props.setIsGameOver(false);\n    props.setIsGameOn(false);\n    props.setLevel(undefined);\n  }\n\n  return (\n    <Nav>\n      <h1 onClick={handleClick}>\n        <Link to='/'>\n          <span id='first'>Where's</span> <span id='second'>Waldo?</span>\n        </Link>\n      </h1>\n\n      {props.isGameOn ? (\n        <Timer\n          time={props.time}\n          setTime={props.setTime}\n          isTimerOn={props.isTimerOn}\n          setIsTimerOn={props.setIsTimerOn}\n          isGameOver={props.isGameOver}\n        />\n      ) : null}\n\n      <section>\n        <LevelSelect setIsGameOver={props.setIsGameOver} />\n        <Link onClick={handleClick} to='/high-scores'>\n          <button>High Scores</button>\n        </Link>\n      </section>\n    </Nav>\n  );\n}\n","import styled from 'styled-components';\n\ninterface SwitchProps {\n  waldoMode: boolean;\n}\n\nexport const MainContainer = styled.main<SwitchProps>`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 16px;\n  gap: 16px;\n  width: 100%;\n  height: auto;\n  text-align: center;\n\n  figure {\n    padding: 0;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 8px;\n    height: auto;\n    text-align: center;\n    overflow-x: none;\n  }\n\n  img {\n    object-fit: contain;\n  }\n\n  #homeLogo {\n    border: none;\n    width: 100%;\n    img {\n      width: 100%;\n      height: 35vh;\n    }\n  }\n\n  a {\n    border: 3px solid\n      ${props =>\n        props.waldoMode\n          ? props.theme.colors.primary\n          : props.theme.colors.secondary};\n    border-radius: 8px;\n    padding: 16px;\n  }\n\n  h3 {\n    color: white;\n    color: black;\n    padding: 8px;\n    border-radius: 7px;\n  }\n`;\n\nexport const HomeContainer = styled.section`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: auto;\n  gap: 16px;\n\n  figure {\n    height: 100%;\n  }\n\n  a {\n    text-decoration: none;\n  }\n\n  figcaption {\n    color: ${props => props.theme.colors.secondary};\n  }\n`;\n\nexport const LevelContainer = styled(HomeContainer)`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  justify-content: space-around;\n  padding: 0 3vw;\n  height: auto;\n\n  a {\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    gap: 8px;\n  }\n\n  img {\n    width: 100%;\n    height: 30vh;\n    object-fit: cover;\n    object-position: right bottom;\n    border-radius: 5px;\n  }\n\n  @media only screen and (device-width: 1000px) {\n    figure > * {\n      height: auto;\n      width: 100%;\n    }\n\n    img {\n      width: 100%;\n    }\n  }\n  @media only screen and (device-width: 669px) {\n    grid-auto-flow: row;\n    grid-template-columns: 1fr 1fr;\n  }\n  @media only screen and (device-width: 500px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nexport const CharacterContainer = styled(LevelContainer)`\n  grid-auto-flow: column;\n  grid-auto-columns: 1fr;\n  img {\n    width: 100%;\n    max-width: 200px;\n    height: 30vh;\n    object-fit: contain;\n  }\n  @media only screen and (device-width: 669px) {\n    grid-auto-flow: row;\n    grid-template-columns: 1fr 1fr 1fr;\n    img {\n      height: 25vh;\n    }\n  }\n  @media only screen and (device-width: 360px) {\n    grid-template-columns: 1fr 1fr;\n  }\n  @media only screen and (device-width: 300px) {\n    display: flex;\n  }\n`;\n\nexport const ItemContainer = styled(CharacterContainer)`\n  @media only screen and (device-width: 1000px) {\n    img {\n      height: 100px;\n      width: 100px;\n    }\n  }\n`;\n\nexport const DifficultyGrid = styled.section`\n  display: flex;\n  position: relative;\n  flex-wrap: wrap;\n  justify-content: center;\n  flex-direction: column;\n  width: 100%;\n  height: auto;\n`;\n\nexport const SwitchContainer = styled.div<SwitchProps>`\n  position: absolute;\n  align-self: flex-end;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  margin: 0 7vw 0 0;\n  @media only screen and (device-width: 669px) {\n    position: relative;\n    align-self: center;\n    margin: 8px 0 0 0;\n  }\n\n  label {\n    width: fit-content;\n    overflow: hidden;\n    white-space: nowrap;\n  }\n\n  /* The switch - the box around the slider */\n  .switch {\n    position: relative;\n    display: inline-block;\n    width: 60px;\n    height: 34px;\n    flex-shrink: 0;\n  }\n\n  /* Hide default HTML checkbox */\n  input {\n    opacity: 0;\n    width: 0;\n    height: 0;\n  }\n\n  /* The slider */\n  span {\n    position: absolute;\n    cursor: pointer;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: ${props =>\n      props.waldoMode\n        ? props.theme.colors.primary\n        : props.theme.colors.secondary};\n    -webkit-transition: 0.4s;\n    transition: 0.4s;\n    border-radius: 34px;\n  }\n\n  span:before {\n    position: absolute;\n    content: '';\n    height: 26px;\n    min-width: 26px;\n    left: 4px;\n    bottom: 4px;\n    background-color: white;\n    -webkit-transition: 0.4s;\n    transition: 0.4s;\n    border-radius: 50%;\n  }\n\n  input:focus + span {\n    box-shadow: 0 0 1px ${props => props.theme.colors.secondary};\n  }\n\n  input:checked + span:before {\n    -webkit-transform: translateX(26px);\n    -ms-transform: translateX(26px);\n    transform: translateX(26px);\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/Where'sWaldo.13ab699b.png\";","export default __webpack_public_path__ + \"static/media/GobblingGluttons.3e56f8b3.jpg\";","export default __webpack_public_path__ + \"static/media/SkiResort.e623c363.png\";","export default __webpack_public_path__ + \"static/media/ToysToysToys.bd8c0dd8.jpg\";","export default __webpack_public_path__ + \"static/media/Odlaw.7f2337c8.png\";","export default __webpack_public_path__ + \"static/media/Waldo.2a7963c3.png\";","export default __webpack_public_path__ + \"static/media/Wenda.c2c5c953.png\";","export default __webpack_public_path__ + \"static/media/WizardWhitebeard.77d677dc.png\";","export default __webpack_public_path__ + \"static/media/Woof.b5718edf.png\";","import { Link } from 'react-router-dom';\n\nimport {\n  MainContainer,\n  HomeContainer,\n  LevelContainer,\n  CharacterContainer,\n  // ItemContainer,\n  DifficultyGrid,\n  SwitchContainer,\n} from './styles/HomeContainer.styled';\n\nimport WheresWaldo from \"../assets/Where'sWaldo.png\";\n\nimport GobblingGluttons from '../assets/levels/GobblingGluttons.jpg';\nimport SkiResort from '../assets/levels/SkiResort.png';\nimport ToysToysToys from '../assets/levels/ToysToysToys.jpg';\n\nimport Odlaw from '../assets/characters/Odlaw.png';\nimport Waldo from '../assets/characters/Waldo.png';\nimport Wenda from '../assets/characters/Wenda.png';\nimport Wizard from '../assets/characters/WizardWhitebeard.png';\nimport Woof from '../assets/characters/Woof.png';\n\n// import Binoculars from '../assets/items/Binoculars.png';\n// import Bone from '../assets/items/Bone.png';\n// import Camera from '../assets/items/Camera.png';\n// import Key from '../assets/items/Key.png';\n// import Scroll from '../assets/items/Scroll.png';\n\ninterface HomePageProps {\n  waldoMode: boolean;\n  setWaldoMode: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nexport default function HomePage(props: HomePageProps) {\n  function handleClick() {\n    props.setWaldoMode(!props.waldoMode);\n  }\n\n  return (\n    <MainContainer waldoMode={props.waldoMode}>\n      <figure id='homeLogo'>\n        <img src={WheresWaldo} alt=\"Where's Waldo?\" />\n      </figure>\n\n      <HomeContainer>\n        <DifficultyGrid>\n          <h3>Choose a level!</h3>\n\n          <SwitchContainer waldoMode={props.waldoMode}>\n            <label htmlFor='checkbox'>\n              {props.waldoMode ? 'Waldo' : 'Challenge'} Mode\n            </label>\n            <label className='switch'>\n              <input onClick={handleClick} type='checkbox' id='checkbox' />\n              <span></span>\n            </label>\n          </SwitchContainer>\n        </DifficultyGrid>\n\n        <LevelContainer>\n          <figure>\n            <Link to='/gobbling-gluttons'>\n              <figcaption>\n                <b>Gobbling Gluttons</b>\n              </figcaption>\n              <img src={GobblingGluttons} alt='Gobbling Gluttons' />\n            </Link>\n          </figure>\n\n          <figure>\n            <Link to='/ski-resort'>\n              <figcaption>\n                <b>Ski Resort</b>\n              </figcaption>\n              <img src={SkiResort} alt='Ski Resort' />\n            </Link>\n          </figure>\n\n          <figure>\n            <Link to='/toys-toys-toys'>\n              <figcaption>\n                <b>Toys! Toys! Toys!</b>\n              </figcaption>\n              <img src={ToysToysToys} alt='Toys! Toys! Toys!' />\n            </Link>\n          </figure>\n        </LevelContainer>\n      </HomeContainer>\n\n      <HomeContainer>\n        <h3>Look for these characters!</h3>\n\n        <CharacterContainer>\n          <figure>\n            <figcaption>\n              <b>Waldo</b>\n            </figcaption>\n            <img src={Waldo} alt='Waldo' />\n          </figure>\n\n          <figure>\n            <figcaption>\n              <b>Wenda</b>\n            </figcaption>\n            <img src={Wenda} alt='Wenda' />\n          </figure>\n\n          <figure>\n            <figcaption>\n              <b>Wizard</b>\n            </figcaption>\n            <img src={Wizard} alt='Wizard' />\n          </figure>\n\n          <figure>\n            <figcaption>\n              <b>Odlaw</b>\n            </figcaption>\n            <img src={Odlaw} alt='Odlaw' />\n          </figure>\n\n          <figure>\n            <figcaption>\n              <b>Woof</b>\n            </figcaption>\n            <img src={Woof} alt='Woof' />\n          </figure>\n        </CharacterContainer>\n      </HomeContainer>\n\n      {/* <HomeContainer>\n        <h3>Find these items!</h3>\n\n        <ItemContainer>\n          <figure>\n            <figcaption>\n              <b>Binoculars</b>\n            </figcaption>\n            <img src={Binoculars} alt='Binoculars' />\n          </figure>\n\n          <figure>\n            <figcaption>\n              <b>Bone</b>\n            </figcaption>\n            <img src={Bone} alt='Bone' />\n          </figure>\n\n          <figure>\n            <figcaption>\n              <b>Camera</b>\n            </figcaption>\n            <img src={Camera} alt='Camera' />\n          </figure>\n\n          <figure>\n            <figcaption>\n              <b>Key</b>\n            </figcaption>\n            <img src={Key} alt='Key' />\n          </figure>\n\n          <figure>\n            <figcaption>\n              <b>Scroll</b>\n            </figcaption>\n            <img src={Scroll} alt='Scroll' />\n          </figure>\n        </ItemContainer>\n      </HomeContainer> */}\n    </MainContainer>\n  );\n}\n","import styled from 'styled-components';\n\nimport { NotificationState } from '../WaldoGame';\n\ninterface BannerProps {\n  notificationData: NotificationState;\n}\n\nexport const Banner = styled.aside<BannerProps>`\n  position: fixed;\n  color: white;\n  top: 10rem;\n  left: 50%;\n  transform: translateX(-50%);\n  padding: 8px;\n  background-color: ${props =>\n    props.notificationData.isCharacterFound\n      ? props => props.theme.colors.primary\n      : props => props.theme.colors.secondary};\n  border-radius: ${props => props.theme.sizing.ul.borderRadius};\n  z-index: 1;\n`;\n","import { Banner } from './styles/Banner.styled';\n\nimport { NotificationState } from './WaldoGame';\n\ninterface NotificationProps {\n  notificationData: NotificationState;\n}\n\nexport default function Notification(props: NotificationProps) {\n  return (\n    <Banner notificationData={props.notificationData}>\n      {props.notificationData.isCharacterFound ? (\n        <span>\n          You found <b>{props.notificationData.character}</b>!\n        </span>\n      ) : (\n        <span>\n          <b>{props.notificationData.character}</b> not found, try again!\n        </span>\n      )}\n    </Banner>\n  );\n}\n","import { doc, getDoc } from 'firebase/firestore';\nimport { Coords, NotificationState } from './WaldoGame';\nimport { db } from '../index';\nimport React from 'react';\n\ninterface MenuProps {\n  isContextMenuOpen: boolean;\n  setIsContextMenuOpen: React.Dispatch<React.SetStateAction<boolean>>;\n  notificationData: NotificationState;\n  setNotificationData: React.Dispatch<React.SetStateAction<NotificationState>>;\n  img: string;\n  level: string;\n  character: string;\n  characters: string[];\n  mouseCoords: Coords;\n  isOdlawFound?: boolean;\n  setIsOdlawFound: React.Dispatch<React.SetStateAction<boolean>>;\n  isWaldoFound?: boolean;\n  setIsWaldoFound: React.Dispatch<React.SetStateAction<boolean>>;\n  isWendaFound?: boolean;\n  setIsWendaFound: React.Dispatch<React.SetStateAction<boolean>>;\n  isWizardFound?: boolean;\n  setIsWizardFound: React.Dispatch<React.SetStateAction<boolean>>;\n  isWoofFound?: boolean;\n  setIsWoofFound: React.Dispatch<React.SetStateAction<boolean>>;\n  waldoMode: boolean;\n}\n\nexport default function SelectionMenu(props: MenuProps) {\n  async function getCoords(selection: string) {\n    const docRef = doc(db, 'Levels', props.level, 'Coordinates', selection);\n    const docSnap = await getDoc(docRef);\n\n    if (docSnap.exists()) {\n      const waldoCoords = docSnap.data();\n      return waldoCoords;\n    } else {\n      console.error('No such document!');\n    }\n  }\n\n  async function handleClick(e: any) {\n    const selection: string = e.target.textContent;\n    props.setIsContextMenuOpen(!props.isContextMenuOpen);\n\n    const waldoCoords = await getCoords(selection);\n\n    if (waldoCoords) {\n      // Test if the selection is within the area\n      if (\n        Math.abs(props.mouseCoords.x - waldoCoords.x) < 25 &&\n        Math.abs(props.mouseCoords.y - waldoCoords.y) < 42\n      ) {\n        clearTimeout(props.notificationData.timer);\n\n        props.setNotificationData({\n          isNotificationOpen: true,\n          character: selection,\n          isCharacterFound: true,\n          timer: setTimeout(() => {\n            props.setNotificationData({\n              ...props.notificationData,\n              isNotificationOpen: false,\n            });\n          }, 3000),\n        });\n\n        switch (selection) {\n          case 'Odlaw':\n            props.setIsOdlawFound(true);\n            break;\n\n          case 'Waldo':\n            props.setIsWaldoFound(true);\n            break;\n\n          case 'Wenda':\n            props.setIsWendaFound(true);\n            break;\n\n          case 'Wizard':\n            props.setIsWizardFound(true);\n            break;\n\n          case 'Woof':\n            props.setIsWoofFound(true);\n            break;\n        }\n      } else {\n        clearTimeout(props.notificationData.timer);\n\n        props.setNotificationData({\n          isNotificationOpen: true,\n          character: selection,\n          isCharacterFound: false,\n          timer: setTimeout(() => {\n            props.setNotificationData({\n              ...props.notificationData,\n              isNotificationOpen: false,\n            });\n          }, 3000),\n        });\n      }\n    }\n  }\n\n  function isFound(character: string): boolean {\n    switch (character) {\n      case 'Odlaw':\n        return props.isOdlawFound ? true : false;\n\n      case 'Waldo':\n        return props.isWaldoFound ? true : false;\n\n      case 'Wenda':\n        return props.isWendaFound ? true : false;\n\n      case 'Wizard':\n        return props.isWizardFound ? true : false;\n\n      case 'Woof':\n        return props.isWoofFound ? true : false;\n\n      default:\n        return false;\n    }\n  }\n\n  return (\n    <ul>\n      {props.waldoMode ? (\n        <li onClick={handleClick} key={props.character}>\n          {isFound(props.character) ? (\n            <s>{props.character}</s>\n          ) : (\n            props.character\n          )}\n        </li>\n      ) : (\n        props.characters.map(character => {\n          return (\n            <li onClick={handleClick} key={character}>\n              {isFound(character) ? <s>{character}</s> : character}\n            </li>\n          );\n        })\n      )}\n    </ul>\n  );\n}\n","import styled from 'styled-components';\n\ninterface GameContainerProps {\n  isTimerOn: boolean;\n  waldoMode: boolean;\n}\n\ninterface PauseScreenProps {\n  isNotificationOpen: boolean;\n}\n\nexport const GameContainer = styled.main<GameContainerProps>`\n  display: flex;\n  user-select: none;\n  width: 100%;\n  height: auto;\n\n  figure {\n    text-align: center;\n  }\n\n  figcaption {\n    padding: 8px;\n  }\n\n  img {\n    --webkit-user-drag: none;\n    object-fit: contain;\n    width: 100%;\n    height: auto;\n    border: 7px solid\n      ${props =>\n        props.waldoMode\n          ? props.theme.colors.primary\n          : props.theme.colors.secondary};\n    border-radius: 7px;\n    ${props => (props.isTimerOn ? null : 'filter: blur(16px)')};\n    ${props => (props.isTimerOn ? null : '-webkit-filter: blur(16px)')};\n  }\n`;\n\nexport const PauseScreen = styled.p<PauseScreenProps>`\n  position: fixed;\n  color: white;\n  left: 50%;\n  top: ${props => (props.isNotificationOpen ? '15rem' : '10rem')};\n  transition: top 1s ease 0s;\n  transform: translateX(-50%);\n  padding: 8px;\n  background-color: ${props => props.theme.colors.secondary};\n  border-radius: ${props => props.theme.sizing.ul.borderRadius};\n  cursor: pointer;\n  z-index: 1;\n`;\n","import styled from 'styled-components';\nimport { Coords } from '../WaldoGame';\n\ninterface MenuProps {\n  menuCoords: Coords;\n}\n\nconst targetSize = 75;\n\nexport const ContextMenu = styled.div<MenuProps>`\n  ul {\n    display: flex;\n    flex-direction: column;\n    position: absolute;\n    left: ${props => props.menuCoords.x + targetSize / 2 + 3}px;\n    top: ${props => props.menuCoords.y - targetSize / 4}px;\n    color: ${props => props.theme.colors.primary};\n    background-color: white;\n    padding: ${props => props.theme.sizing.ul.padding};\n    border: 1px solid ${props => props.theme.colors.secondary};\n    border-radius: ${props => props.theme.sizing.ul.borderRadius};\n    gap: 3px;\n    list-style: none;\n    z-index: 1;\n  }\n\n  li {\n    padding: 3px;\n  }\n\n  li:hover {\n    color: white;\n    cursor: pointer;\n    background-color: ${props => props.theme.colors.primary};\n    transition: opacity, background-color, color, 0.25s;\n    border-radius: 3px;\n  }\n`;\n\nexport const TargetingBox = styled.div<MenuProps>`\n  left: ${props => props.menuCoords.x - targetSize / 2}px;\n  top: ${props => props.menuCoords.y - targetSize / 2}px;\n  display: flex;\n  position: absolute;\n  height: ${targetSize}px;\n  width: ${targetSize}px;\n  border: 5px dashed ${props => props.theme.colors.targetingBox};\n  background-color: rgba(0, 0, 0, 0.3);\n  border-radius: 30px;\n  z-index: 1;\n`;\n","import { useState, useEffect, useRef } from 'react';\nimport { useHistory } from 'react-router';\nimport { collection, getDocs } from 'firebase/firestore';\n\nimport Notification from './Notification';\nimport SelectionMenu from './SelectionMenu';\n\nimport { GameContainer, PauseScreen } from './styles/GameContainer.styled';\nimport { ContextMenu, TargetingBox } from './styles/ContextMenu.styled';\nimport { db } from '../index';\n\nexport interface Coords {\n  x: number;\n  y: number;\n}\n\nexport interface NotificationState {\n  isNotificationOpen: boolean;\n  character: string;\n  isCharacterFound: boolean;\n  timer: NodeJS.Timeout;\n}\n\ninterface GameProps {\n  isGameOver: boolean;\n  setIsGameOver: React.Dispatch<React.SetStateAction<boolean>>;\n  isGameOn: boolean;\n  setIsGameOn: React.Dispatch<React.SetStateAction<boolean>>;\n  setTime: React.Dispatch<React.SetStateAction<number>>;\n  isTimerOn: boolean;\n  setIsTimerOn: React.Dispatch<React.SetStateAction<boolean>>;\n  img: string;\n  level: string;\n  waldoMode: boolean;\n}\n\nexport default function WaldoGame(props: GameProps) {\n  const [mouseCoords, setMouseCoords] = useState({ x: 0, y: 0 });\n  const [menuCoords, setMenuCoords] = useState({ x: 0, y: 0 });\n  const [isContextOpen, setIsContextOpen] = useState(false);\n  const [isOdlawFound, setIsOdlawFound] = useState(false);\n  const [isWaldoFound, setIsWaldoFound] = useState(false);\n  const [isWendaFound, setIsWendaFound] = useState(false);\n  const [isWizardFound, setIsWizardFound] = useState(false);\n  const [isWoofFound, setIsWoofFound] = useState(false);\n  const [character, setCharacter] = useState('');\n  const [characters, setCharacters] = useState<string[]>([]);\n  const [notificationData, setNotificationData] = useState<NotificationState>({\n    isNotificationOpen: false,\n    character: '',\n    isCharacterFound: false,\n    timer: setTimeout(() => {}, 0),\n  });\n\n  const history = useHistory();\n  const firstRender = useRef(true);\n\n  useEffect(() => {\n    if (firstRender.current) {\n      firstRender.current = false;\n      props.setIsGameOn(true);\n      return;\n    }\n\n    let gameOver: boolean[] = [];\n\n    for (let character in characters) {\n      switch (characters[character]) {\n        case 'Odlaw':\n          gameOver.push(isOdlawFound);\n          break;\n\n        case 'Waldo':\n          gameOver.push(isWaldoFound);\n          break;\n\n        case 'Wenda':\n          gameOver.push(isWendaFound);\n          break;\n\n        case 'Wizard':\n          gameOver.push(isWizardFound);\n          break;\n      }\n    }\n\n    if (props.waldoMode) {\n      if (isWaldoFound) {\n        props.setIsTimerOn(false);\n        props.setIsGameOn(false);\n        return props.setIsGameOver(true);\n      }\n    } else {\n      if (gameOver.includes(false)) {\n        return;\n      } else {\n        props.setIsTimerOn(false);\n        props.setIsGameOn(false);\n        return props.setIsGameOver(true);\n      }\n    }\n  }, [isOdlawFound, isWaldoFound, isWendaFound, isWizardFound]);\n\n  useEffect((): void => {\n    resetCharacters();\n    getCharacters();\n    props.setTime(0);\n  }, [history.location]);\n\n  function resetCharacters() {\n    setIsOdlawFound(false);\n    setIsWaldoFound(false);\n    setIsWendaFound(false);\n    setIsWizardFound(false);\n  }\n\n  async function getCharacters() {\n    const characterList = await getDocs(\n      collection(db, 'Levels', props.level, 'Coordinates')\n    );\n    const characters: string[] = [];\n    characterList.forEach(character => {\n      characters.push(character.id);\n    });\n\n    props.waldoMode ? setCharacter('Waldo') : setCharacters(characters);\n  }\n\n  function getMouseCoords(e: any) {\n    const { width, height }: { width: number; height: number } =\n      e.target.getBoundingClientRect();\n    const { offsetX, offsetY }: { offsetX: number; offsetY: number } =\n      e.nativeEvent;\n\n    const mouseX = Math.round((offsetX / width) * 1000);\n    const mouseY = Math.round((offsetY / height) * 1000);\n    const { pageX: menuX, pageY: menuY }: { pageX: number; pageY: number } = e;\n\n    const menuCoords: Coords = {\n      x: menuX,\n      y: menuY,\n    };\n\n    const mouseCoords: Coords = {\n      x: mouseX,\n      y: mouseY,\n    };\n\n    setMouseCoords(mouseCoords);\n    setMenuCoords(menuCoords);\n  }\n\n  async function handleClick(e: any) {\n    getMouseCoords(e);\n    props.isTimerOn\n      ? setIsContextOpen(!isContextOpen)\n      : props.setIsTimerOn(!props.isTimerOn);\n  }\n\n  return (\n    <GameContainer isTimerOn={props.isTimerOn} waldoMode={props.waldoMode}>\n      {notificationData.isNotificationOpen ? (\n        <Notification notificationData={notificationData} />\n      ) : null}\n      {props.isTimerOn ? null : (\n        <PauseScreen\n          onClick={() => props.setIsTimerOn(!props.isTimerOn)}\n          isNotificationOpen={notificationData.isNotificationOpen}\n        >\n          Game is paused\n        </PauseScreen>\n      )}\n      {isContextOpen ? (\n        <ContextMenu menuCoords={menuCoords}>\n          <TargetingBox onClick={handleClick} menuCoords={menuCoords} />\n          <SelectionMenu\n            isContextMenuOpen={isContextOpen}\n            setIsContextMenuOpen={setIsContextOpen}\n            notificationData={notificationData}\n            setNotificationData={setNotificationData}\n            img={props.img}\n            level={props.level}\n            character={character}\n            characters={characters}\n            mouseCoords={mouseCoords}\n            isOdlawFound={isOdlawFound}\n            setIsOdlawFound={setIsOdlawFound}\n            isWaldoFound={isWaldoFound}\n            setIsWaldoFound={setIsWaldoFound}\n            isWendaFound={isWendaFound}\n            setIsWendaFound={setIsWendaFound}\n            isWizardFound={isWizardFound}\n            setIsWizardFound={setIsWizardFound}\n            isWoofFound={isWoofFound}\n            setIsWoofFound={setIsWoofFound}\n            waldoMode={props.waldoMode}\n          />\n        </ContextMenu>\n      ) : null}\n      <figure>\n        <figcaption>\n          <h3>{props.level}</h3>\n        </figcaption>\n        <img\n          onClick={handleClick}\n          src={props.img}\n          draggable='false'\n          alt=\"Where's Waldo?\"\n        />\n      </figure>\n    </GameContainer>\n  );\n}\n","import styled from 'styled-components';\n\nexport const MainContainer = styled.main`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 16px;\n  background-color: white;\n  gap: 64px;\n  width: 100%;\n  height: auto;\n  text-align: center;\n\n  figure {\n    height: clamp(15vh, 35vh, 35vh);\n    width: auto;\n  }\n\n  figcaption {\n    padding: 16px 0 0 0;\n  }\n\n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: contain;\n  }\n\n  button {\n    cursor: pointer;\n    color: white;\n    background-color: ${props => props.theme.colors.primary};\n    padding: 5px;\n    border-radius: 7px;\n    border: none;\n    font: inherit;\n  }\n\n  fieldset {\n    display: flex;\n    flex-direction: column;\n    padding: 16px;\n    gap: 8px;\n  }\n\n  form {\n    display: flex;\n    flex-direction: column;\n    gap: 8px;\n  }\n\n  #submitButton {\n    cursor: pointer;\n    color: white;\n    background-color: ${props => props.theme.colors.primary};\n    padding: 5px;\n    border-radius: 7px;\n    border: none;\n    font: inherit;\n  }\n\n  label {\n    text-align: left;\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/WaldoFound.80f74ad0.png\";","import { useRef } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { collection, addDoc } from 'firebase/firestore';\n\nimport { MainContainer } from './styles/GameOverContainer.styled';\n\nimport WaldoFound from '../assets/WaldoFound.png';\n\nimport { db } from '../index';\n\ninterface GameOverProps {\n  isGameOver: boolean;\n  setIsGameOver: React.Dispatch<React.SetStateAction<boolean>>;\n  time: number;\n  level: string;\n  waldoMode: boolean;\n}\n\nexport default function GameOver(props: GameOverProps) {\n  const history = useHistory();\n\n  const usernameRef = useRef<HTMLInputElement>(null);\n\n  function handleClick() {\n    props.setIsGameOver(false);\n  }\n\n  async function handleSubmit(e: React.FormEvent) {\n    e.preventDefault();\n    history.push({\n      pathname: '/high-scores',\n      state: {\n        level: props.level,\n      },\n    });\n    const username = usernameRef.current!.value;\n\n    if (props.waldoMode) {\n      try {\n        await addDoc(collection(db, 'Levels', props.level, 'High Scores'), {\n          username: username,\n          time: props.time,\n          waldoMode: true,\n        });\n      } catch (e) {\n        console.error('Error adding document: ', e);\n      }\n    } else {\n      try {\n        await addDoc(collection(db, 'Levels', props.level, 'High Scores'), {\n          username: username,\n          time: props.time,\n        });\n      } catch (e) {\n        console.error('Error adding document: ', e);\n      }\n    }\n  }\n\n  return (\n    <MainContainer>\n      <figure>\n        <img src={WaldoFound} alt='You found Waldo!' />\n        <figcaption>You found Waldo!</figcaption>\n      </figure>\n\n      <form onSubmit={handleSubmit}>\n        <h3>\n          You completed <b>{props.level}</b> in{' '}\n          <b>{props.time / 1000} seconds!</b>\n        </h3>\n\n        <fieldset>\n          <legend>Enter your name to save your score!</legend>\n\n          <label htmlFor='username'>Username</label>\n          <input ref={usernameRef} type='text' id='username'></input>\n        </fieldset>\n\n        <input id='submitButton' type='submit' value='Submit'></input>\n      </form>\n\n      <button onClick={handleClick}>Play Again</button>\n    </MainContainer>\n  );\n}\n","import styled from 'styled-components';\n\ninterface SwitchProps {\n  waldoMode: boolean;\n}\n\nexport const MainContainer = styled.main`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 16px;\n  gap: 16px;\n  width: 100%;\n  height: auto;\n  text-align: center;\n\n  figure {\n    width: auto;\n    height: 100%;\n    padding: 8px;\n  }\n\n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: contain;\n  }\n\n  table,\n  th,\n  td {\n    border: 2px solid black;\n    border-collapse: collapse;\n  }\n\n  table {\n    width: 100%;\n\n    caption,\n    th,\n    td {\n      padding: 16px;\n    }\n\n    .username {\n      width: 80%;\n    }\n\n    .time {\n      width: 20%;\n    }\n  }\n`;\n\nexport const HighScoresContainer = styled.section`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: auto;\n  gap: 16px;\n\n  figure {\n    height: 100%;\n    padding: 0;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 8px;\n    height: auto;\n    text-align: center;\n    overflow-x: none;\n  }\n\n  img {\n    width: auto;\n    height: auto;\n  }\n\n  figcaption {\n    color: ${props => props.theme.colors.secondary};\n  }\n`;\n\nexport const HighScoresContainerRow = styled(HighScoresContainer)<SwitchProps>`\n  display: grid;\n  grid-auto-flow: column;\n  grid-auto-columns: 1fr;\n  justify-content: space-around;\n  padding: 0 3vw;\n  height: auto;\n\n  figure {\n    border: 3px solid\n      ${props =>\n        props.waldoMode\n          ? props.theme.colors.primary\n          : props.theme.colors.secondary};\n    border-radius: 8px;\n    padding: 16px;\n    cursor: pointer;\n  }\n\n  img {\n    width: 100%;\n    height: 30vh;\n    object-fit: cover;\n    object-position: right bottom;\n    border-radius: 5px;\n  }\n\n  @media only screen and (device-width: 1000px) {\n    img {\n      height: 20vh;\n    }\n  }\n\n  @media only screen and (device-width: 669px) {\n    padding: 0;\n    figure {\n      padding: 8px;\n    }\n    img {\n      height: 15vh;\n    }\n  }\n`;\n\nexport const DifficultyGrid = styled.section`\n  display: flex;\n  position: relative;\n  justify-content: center;\n  flex-direction: column;\n  width: 100%;\n  height: auto;\n`;\n\nexport const SwitchContainer = styled.div<SwitchProps>`\n  position: absolute;\n  align-self: flex-end;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  margin: 0 3vw 0 0;\n  @media only screen and (device-width: 669px) {\n    position: relative;\n    align-self: center;\n    margin: 8px 0 0 0;\n  }\n\n  label {\n    width: fit-content;\n    overflow: hidden;\n    white-space: nowrap;\n  }\n\n  /* The switch - the box around the slider */\n  .switch {\n    position: relative;\n    display: inline-block;\n    width: 60px;\n    height: 34px;\n    flex-shrink: 0;\n  }\n\n  /* Hide default HTML checkbox */\n  input {\n    opacity: 0;\n    width: 0;\n    height: 0;\n  }\n\n  /* The slider */\n  span {\n    position: absolute;\n    cursor: pointer;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: ${props =>\n      props.waldoMode\n        ? props.theme.colors.primary\n        : props.theme.colors.secondary};\n    -webkit-transition: 0.4s;\n    transition: 0.4s;\n    border-radius: 34px;\n  }\n\n  span:before {\n    position: absolute;\n    content: '';\n    height: 26px;\n    min-width: 26px;\n    left: 4px;\n    bottom: 4px;\n    background-color: white;\n    -webkit-transition: 0.4s;\n    transition: 0.4s;\n    border-radius: 50%;\n  }\n\n  input:focus + span {\n    box-shadow: 0 0 1px ${props => props.theme.colors.secondary};\n  }\n\n  input:checked + span:before {\n    -webkit-transform: translateX(26px);\n    -ms-transform: translateX(26px);\n    transform: translateX(26px);\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/CharacterBanner.25ed0c72.png\";","import { useState, useEffect, useRef } from 'react';\nimport { getDocs, collection, QueryDocumentSnapshot } from 'firebase/firestore';\nimport { db } from '../index';\nimport { DocumentData } from '@firebase/firestore-types';\n\nimport {\n  MainContainer,\n  HighScoresContainer,\n  HighScoresContainerRow,\n  DifficultyGrid,\n  SwitchContainer,\n} from './styles/HighScoresContainer.styled';\n\nimport CharacterBanner from '../assets/CharacterBanner.png';\n\nimport GobblingGluttons from '../assets/levels/GobblingGluttons.jpg';\nimport SkiResort from '../assets//levels/SkiResort.png';\nimport ToysToysToys from '../assets/levels/ToysToysToys.jpg';\n\nimport { useLocation } from 'react-router';\n\ninterface LocationState {\n  state: {\n    level: string;\n  };\n}\n\ninterface HighScoreProps {\n  level: string | undefined;\n  setLevel: React.Dispatch<React.SetStateAction<string | undefined>>;\n  waldoMode: boolean;\n  setWaldoMode: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nexport default function HighScores(props: HighScoreProps) {\n  const [levelScores, setLevelScores] = useState<DocumentData[]>([]);\n\n  const location: LocationState = useLocation();\n\n  const leaderboard: any = useRef(null);\n\n  const firstRender = useRef(true);\n\n  useEffect(() => {\n    if (firstRender.current) {\n      firstRender.current = false;\n      return;\n    } else {\n      leaderboard.current ? leaderboard.current.scrollIntoView() : void 0;\n    }\n  }, [levelScores]);\n\n  useEffect(() => {\n    try {\n      const newLevel = location.state.level;\n      props.setLevel(newLevel);\n    } catch {\n      void 0;\n    }\n  }, []);\n\n  useEffect(() => {\n    props.level ? getLevelScores(props.level) : void 0;\n  }, [props.level, props.waldoMode]);\n\n  function handleClick(newLevel: string): void {\n    props.setLevel(newLevel);\n  }\n\n  async function getLevelScores(newLevel: string) {\n    const querySnapshot = await getDocs(\n      collection(db, 'Levels', newLevel, 'High Scores')\n    );\n    const levelScores: QueryDocumentSnapshot<DocumentData>[] = [];\n    querySnapshot.forEach(score => {\n      const scoreData = score.data();\n      if (props.waldoMode && newLevel !== 'Ski Resort') {\n        if ('waldoMode' in scoreData) {\n          levelScores.push(score);\n        }\n      } else {\n        if (!('waldoMode' in scoreData)) {\n          levelScores.push(score);\n        }\n      }\n    });\n    const leaderboard = levelScores.map(score => score.data());\n    const newLevelScores = leaderboard.sort((a, b) => {\n      return a.time - b.time;\n    });\n\n    setLevelScores(newLevelScores);\n  }\n\n  async function getWaldoModeScores(newLevel: string) {\n    const querySnapshot = await getDocs(\n      collection(db, 'Levels', newLevel, 'High Scores')\n    );\n    const levelScores: QueryDocumentSnapshot<DocumentData>[] = [];\n    querySnapshot.forEach(score => {\n      levelScores.push(score);\n    });\n    const leaderboard = levelScores.map(score => score.data());\n    const newLevelScores = leaderboard.sort((a, b) => {\n      return a.time - b.time;\n    });\n    setLevelScores(newLevelScores);\n  }\n\n  function difficultyToggle() {\n    props.setWaldoMode(!props.waldoMode);\n  }\n\n  return (\n    <MainContainer>\n      <figure>\n        <img src={CharacterBanner} alt='Characters' />\n      </figure>\n      <h2>High Scores</h2>\n\n      <HighScoresContainer>\n        <h3>Choose a level!</h3>\n\n        <HighScoresContainerRow waldoMode={props.waldoMode}>\n          <figure onClick={() => handleClick('Gobbling Gluttons')}>\n            <figcaption>\n              <b>Gobbling Gluttons</b>\n            </figcaption>\n            <img src={GobblingGluttons} alt='Gobbling Gluttons' />\n          </figure>\n\n          <figure onClick={() => handleClick('Ski Resort')}>\n            <figcaption>\n              <b>Ski Resort</b>\n            </figcaption>\n            <img src={SkiResort} alt='Ski Resort' />\n          </figure>\n\n          <figure onClick={() => handleClick('Toys! Toys! Toys!')}>\n            <figcaption>\n              <b>Toys! Toys! Toys!</b>\n            </figcaption>\n            <img src={ToysToysToys} alt='Toys! Toys! Toys!' />\n          </figure>\n        </HighScoresContainerRow>\n      </HighScoresContainer>\n\n      <table ref={leaderboard} id='leaderboard'>\n        <caption>\n          {props.level ? (\n            <DifficultyGrid>\n              <h3>{props.level}</h3>\n\n              <SwitchContainer waldoMode={props.waldoMode}>\n                <label htmlFor='checkbox'>\n                  {props.waldoMode ? 'Waldo' : 'Challenge'} Mode\n                </label>\n                <label className='switch'>\n                  <input\n                    onClick={difficultyToggle}\n                    type='checkbox'\n                    id='checkbox'\n                  />\n                  <span></span>\n                </label>\n              </SwitchContainer>\n            </DifficultyGrid>\n          ) : (\n            <DifficultyGrid>\n              <h3>Choose a level first!</h3>\n\n              <SwitchContainer waldoMode={props.waldoMode}>\n                <label htmlFor='checkbox'>\n                  {props.waldoMode ? 'Waldo' : 'Challenge'} Mode\n                </label>\n                <label className='switch'>\n                  <input\n                    onClick={difficultyToggle}\n                    type='checkbox'\n                    id='checkbox'\n                  />\n                  <span></span>\n                </label>\n              </SwitchContainer>\n            </DifficultyGrid>\n          )}\n        </caption>\n        <thead>\n          <tr>\n            <th className='rank'>Rank</th>\n            <th className='username'>Username</th>\n            <th className='time'>Time</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {levelScores.map((score, index) => {\n            return (\n              <tr key={index}>\n                <td>{index + 1}.</td>\n                <td>{score.username}</td>\n                <td>\n                  <span>\n                    {Math.floor((score.time / 60000) % 60)\n                      .toString()\n                      .slice(-2)}\n                    :\n                  </span>\n                  <span>\n                    {('0' + Math.floor((score.time / 1000) % 60)).slice(-2)}\n                  </span>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </MainContainer>\n  );\n}\n","export default function PageNotFound() {\n  return <div>Error 404 - Page Not Found</div>;\n}\n","import { createGlobalStyle } from 'styled-components';\nimport { ThemeType } from './Theme';\n\nexport const GlobalStyles = createGlobalStyle<{ theme: ThemeType }>`\n\n    html {\n        scroll-behavior: smooth;\n    }\n\n    * {\n        margin: 0;\n        padding: 0;\n        box-sizing: border-box;\n    }\n\n    body {\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n            'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n            sans-serif;\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n        width: 100%;\n        height: auto;\n    }\n\n    code {\n        font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;\n    }\n`;\n","export const Theme = {\n  colors: {\n    primary: '#2d9edf', // Waldo blue\n    secondary: '#ee2223', // Waldo red\n    targetingBox: '#39ff14', // Neon green\n  },\n  sizing: {\n    ul: {\n      padding: '3px 5px',\n      borderRadius: '7px',\n    },\n  },\n};\n\nexport type ThemeType = typeof Theme;\n","import { useState } from 'react';\nimport { HashRouter, Switch, Route } from 'react-router-dom';\nimport { ThemeProvider } from 'styled-components';\n\nimport NavBar from './components/NavBar';\nimport HomePage from './components/HomePage';\nimport WaldoGame from './components/WaldoGame';\nimport GameOver from './components/GameOver';\nimport HighScores from './components/HighScores';\nimport PageNotFound from './components/PageNotFound';\n\nimport { GlobalStyles } from './components/styles/Global';\nimport { Theme } from './components/styles/Theme';\n\nimport GobblingGluttons from './assets/levels/GobblingGluttons.jpg';\nimport SkiResort from './assets/levels/SkiResort.png';\nimport ToysToysToys from './assets/levels/ToysToysToys.jpg';\n\nexport default function App() {\n  const [isGameOn, setIsGameOn] = useState(false);\n  const [isGameOver, setIsGameOver] = useState(false);\n  const [time, setTime] = useState(0);\n  const [isTimerOn, setIsTimerOn] = useState(false);\n  const [level, setLevel] = useState<string | undefined>(undefined);\n  const [waldoMode, setWaldoMode] = useState(true);\n\n  return (\n    <HashRouter>\n      <ThemeProvider theme={Theme}>\n        <GlobalStyles />\n\n        <NavBar\n          setIsGameOver={setIsGameOver}\n          isGameOn={isGameOn}\n          setIsGameOn={setIsGameOn}\n          time={time}\n          setTime={setTime}\n          isTimerOn={isTimerOn}\n          setIsTimerOn={setIsTimerOn}\n          isGameOver={isGameOver}\n          setLevel={setLevel}\n        />\n\n        <Switch>\n          <Route exact path='/'>\n            <HomePage waldoMode={waldoMode} setWaldoMode={setWaldoMode} />\n          </Route>\n\n          <Route exact path='/gobbling-gluttons'>\n            {isGameOver ? (\n              <GameOver\n                isGameOver={isGameOver}\n                setIsGameOver={setIsGameOver}\n                time={time}\n                level='Gobbling Gluttons'\n                waldoMode={waldoMode}\n              />\n            ) : (\n              <WaldoGame\n                isGameOver={isGameOver}\n                setIsGameOver={setIsGameOver}\n                isGameOn={isGameOn}\n                setIsGameOn={setIsGameOn}\n                setTime={setTime}\n                isTimerOn={isTimerOn}\n                setIsTimerOn={setIsTimerOn}\n                img={GobblingGluttons}\n                level='Gobbling Gluttons'\n                waldoMode={waldoMode}\n              />\n            )}\n          </Route>\n\n          <Route exact path='/ski-resort'>\n            {isGameOver ? (\n              <GameOver\n                isGameOver={isGameOver}\n                setIsGameOver={setIsGameOver}\n                time={time}\n                level='Ski Resort'\n                waldoMode={waldoMode}\n              />\n            ) : (\n              <WaldoGame\n                isGameOver={isGameOver}\n                setIsGameOver={setIsGameOver}\n                isGameOn={isGameOn}\n                setIsGameOn={setIsGameOn}\n                setTime={setTime}\n                isTimerOn={isTimerOn}\n                setIsTimerOn={setIsTimerOn}\n                img={SkiResort}\n                level='Ski Resort'\n                waldoMode={waldoMode}\n              />\n            )}\n          </Route>\n\n          <Route exact path='/toys-toys-toys'>\n            {isGameOver ? (\n              <GameOver\n                isGameOver={isGameOver}\n                setIsGameOver={setIsGameOver}\n                time={time}\n                level='Toys! Toys! Toys!'\n                waldoMode={waldoMode}\n              />\n            ) : (\n              <WaldoGame\n                isGameOver={isGameOver}\n                setIsGameOver={setIsGameOver}\n                isGameOn={isGameOn}\n                setIsGameOn={setIsGameOn}\n                setTime={setTime}\n                isTimerOn={isTimerOn}\n                setIsTimerOn={setIsTimerOn}\n                img={ToysToysToys}\n                level='Toys! Toys! Toys!'\n                waldoMode={waldoMode}\n              />\n            )}\n          </Route>\n\n          <Route exact path='/high-scores'>\n            <HighScores\n              level={level}\n              setLevel={setLevel}\n              waldoMode={waldoMode}\n              setWaldoMode={setWaldoMode}\n            />\n          </Route>\n\n          <Route component={PageNotFound} />\n        </Switch>\n      </ThemeProvider>\n    </HashRouter>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { initializeApp } from 'firebase/app';\nimport { getFirestore } from 'firebase/firestore';\nimport App from './App';\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyA-_xHp4FOaCpr4mQkqyLxpg_YW3JhmPfQ',\n\n  authDomain: 'wheres-waldo-78b7d.firebaseapp.com',\n\n  projectId: 'wheres-waldo-78b7d',\n\n  storageBucket: 'wheres-waldo-78b7d.appspot.com',\n\n  messagingSenderId: '91226203075',\n\n  appId: '1:91226203075:web:01c1fbfc3ca1bf8df11376',\n};\n\nconst app = initializeApp(firebaseConfig);\nexport const db = getFirestore(app);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}